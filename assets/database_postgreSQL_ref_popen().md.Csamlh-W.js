import{_ as i,c as a,o as e,b3 as p}from"./chunks/framework.CatkIGlB.js";const D=JSON.parse('{"title":"PostgreSQL popen() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/popen().md","filePath":"database/postgreSQL/ref/popen().md","lastUpdated":1690352360000}'),t={name:"database/postgreSQL/ref/popen().md"};function h(n,s,l,k,d,o){return e(),a("div",null,[...s[0]||(s[0]=[p('<h1 id="postgresql-popen-函数" tabindex="-1">PostgreSQL popen() 函数 <a class="header-anchor" href="#postgresql-popen-函数" aria-label="Permalink to &quot;PostgreSQL popen() 函数&quot;">​</a></h1><p>PostgreSQL <code>popen()</code> 函数将指定的路径转换为开放的路径。</p><h2 id="popen-语法" tabindex="-1"><code>popen()</code> 语法 <a class="header-anchor" href="#popen-语法" aria-label="Permalink to &quot;`popen()` 语法&quot;">​</a></h2><p>这是 PostgreSQL <code>popen()</code> 函数的语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">popen(</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">path</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">) </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> path</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>path</code></em></p><p>必需的。 一个路径。例如： <code>path &#39;[(0,0),(1,1),(2,0)]&#39;</code>。</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>popen()</code> 函数返回通过参数指定的路径的开放形式。如果由参数指定的路径本身是开放路径，则返回原路径。</p><h2 id="popen-示例" tabindex="-1"><code>popen()</code> 示例 <a class="header-anchor" href="#popen-示例" aria-label="Permalink to &quot;`popen()` 示例&quot;">​</a></h2><p>下面的语句示例展示了如何使用 PostgreSQL <code>popen()</code> 函数将路径 <code>path &#39;((0,0),(1,1),(2,0))&#39;</code> 转为开放形式。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> popen(</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">path</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">((0,0),(1,1),(2,0))</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">        popen</span></span>\n<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">---------------------</span></span>\n<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> [(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">0</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">0</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">,</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">,</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">2</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">0</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)]</span></span></code></pre></div><p>下面的语句示例展示了如何使用 PostgreSQL <code>popen()</code> 函数将路径 <code>path &#39;[(0,0),(1,1),(2,0)]&#39;</code> 转为开放形式。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> popen(</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">path</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">[(0,0),(1,1),(2,0)]</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">        popen</span></span>\n<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">---------------------</span></span>\n<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> [(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">0</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">0</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">,</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">,</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">2</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">0</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)]</span></span></code></pre></div><p>这里，因为 <code>path &#39;[(0,0),(1,1),(2,0)]&#39;</code> 是开放的，所以直接返回了它。</p>',17)])])}const g=i(t,[["render",h]]);export{D as __pageData,g as default};
