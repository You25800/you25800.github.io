import{_ as i,c as a,o as t,b3 as n}from"./chunks/framework.CatkIGlB.js";const g=JSON.parse('{"title":"PostgreSQL GENERATED COLUMN 生成列","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/databaseAndTable/生成列.md","filePath":"database/postgreSQL/databaseAndTable/生成列.md","lastUpdated":1690289709000}'),l={name:"database/postgreSQL/databaseAndTable/生成列.md"};function h(e,s,p,k,d,r){return t(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="postgresql-generated-column-生成列" tabindex="-1">PostgreSQL GENERATED COLUMN 生成列 <a class="header-anchor" href="#postgresql-generated-column-生成列" aria-label="Permalink to &quot;PostgreSQL GENERATED COLUMN 生成列&quot;">​</a></h1><p>PostgreSQL 生成列的值总是从其他列自动计算出来。</p><h2 id="什么是生成列" tabindex="-1">什么是生成列 <a class="header-anchor" href="#什么是生成列" aria-label="Permalink to &quot;什么是生成列&quot;">​</a></h2><p>在 PostgreSQL 中，生成列（GENERATED COLUMN）是一个特殊的列，它的值会根据列定义中的表达式自动计算得出。并且，你不能直接写入或更新生成列的值。 生成列是定义在列上的约束。</p><p>生成列有 2 种类型：</p><ul><li>虚拟生成列：列值不会被存储下来。当读取该列时，该列的值会被计算。</li><li>存储生成列：列值会被存储下来。当插入或修改数据时，该列的值会被重新计算并存储在磁盘上。</li></ul><p>PostgreSQL 目前只支持 存储生成列，不支持 虚拟生成列。</p><h2 id="生成列的语法" tabindex="-1">生成列的语法 <a class="header-anchor" href="#生成列的语法" aria-label="Permalink to &quot;生成列的语法&quot;">​</a></h2><p>要创建生成列，请使用以下语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">col_name data_type</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">  GENERATED</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> ALWAYS</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> AS</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> (expr) STORED</span></span></code></pre></div><p>请注意第二行的 <code>GENERATED ALWAYS AS (expr) STORED</code>：</p><ul><li><code>GENERATED ALWAYS AS</code> 关键字指示此列是一个生成列。</li><li><code>expr</code> 是用于生成此列的值的表达式。</li><li><code>STORED</code> 只是此列是一个存储生成列。这是 PostgreSQL 目前唯一支持的生成列类型。</li></ul><p>你可以在通过 <a href="./创建表.html"><code>CREATE TABLE</code></a> 语句创建表时定义生成列，或者通过 <a href="./修改表.html"><code>ALTER TABLE</code></a> 语句添加一个生成列。</p><h2 id="postgresql-生成列实例" tabindex="-1">PostgreSQL 生成列实例 <a class="header-anchor" href="#postgresql-生成列实例" aria-label="Permalink to &quot;PostgreSQL 生成列实例&quot;">​</a></h2><p>假设，你有个订单明细表，其存储了订单销售的商品的价格和数量。使用以下语句创建 <code>order_item</code> 表：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> order_item</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> (</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  order_item_id </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">SERIAL</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> PRIMARY KEY</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">,</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  goods </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">VARCHAR</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">45</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">) </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">NOT NULL</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">,</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  price </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">DECIMAL</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> NOT NULL</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">,</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  quantity </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">INTEGER</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> NOT NULL</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><p>使用以下语句插入 2 行测试数据：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">INSERT INTO</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> order_item (goods, price, quantity)</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">VALUES</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> (</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">Apple</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">5</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">3</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">), (</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">Peach</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">4</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">4</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><p>使用以下语句查找 <code>order_item</code> 表中的所有行：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> *</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> order_item;</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> order_item_id | goods | price | quantity</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">---------------+-------+-------+----------</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">             1</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> | Apple |     </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">5</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> |        </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">3</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">             2</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> | Peach |     </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">4</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> |        </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">4</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">2</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> rows</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span></code></pre></div><p>假设，您需要查找每个订单项目的总金额，请使用如下 SQL 语句：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  goods,</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  price,</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  quantity,</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  (price </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> quantity) </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">AS</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> total_amount</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> order_item;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> goods</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> price</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> quantity</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> total_amount</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">-------+-------+----------+--------------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Apple</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">     5</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">        3</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           15</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Peach</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">     4</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">        4</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           16</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">2</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> rows</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span></span></code></pre></div><p>上面的语句使用 <code>price * quantity</code> 计算总金额，并使用了 <code>total_amount</code> 作为<a href="./列别名.html">列别名</a>。</p><p>毫无疑问，这是正确的。</p><p>PostgreSQL 生成列可以简化我们的工作，让你不用写这么复杂的 <code>SELECT</code> 语句。现在我们要通过以下语句添加一个生成列：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">ALTER</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> order_item</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">  ADD</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> COLUMN total_amount </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">DECIMAL</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">    GENERATED</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> ALWAYS</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> AS</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> (price </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> quantity) STORED;</span></span></code></pre></div><p>这里，我们添加了一个 <code>total_amount</code> 列。它是一个生成列，它的计算表达式是 <code>price * quantity</code>。</p><p>使用 <code>\\d</code> 命令看一下 <code>order_item</code> 的结构：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">\\d order_item</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">                                               Table</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">public.order_item</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    Column     |         </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">Type</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">          | Collation | Nullable |                        </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">Default</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">---------------+-----------------------+-----------+----------+--------------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> order_item_id | </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">integer</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">               |           | </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">not null</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> | nextval(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">order_item_order_item_id_seq</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">::regclass)</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> goods         | </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">character varying</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">45</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">) |           | </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">not null</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> |</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> price         | </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">numeric</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">               |           | </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">not null</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> |</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> quantity      | </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">integer</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">               |           | </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">not null</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> |</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> total_amount  | </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">numeric</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">               |           |          | </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">generated</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> always</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> as</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> (price </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> quantity::</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">numeric</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">) stored</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">Indexes:</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">order_item_pkey</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> PRIMARY KEY</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, btree (order_item_id)</span></span></code></pre></div><p>您可以发现从上面的输出发现 <code>total_amount</code> 是一个存储生成列。</p><p>通过下面的语句查询表中的所有行：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  goods,</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  price,</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  quantity,</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  total_amount</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> order_item;</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> goods | price | quantity | total_amount</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">-------+-------+----------+--------------</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> Apple |     </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">5</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> |        </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">3</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> |           </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">15</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> Peach |     </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">4</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> |        </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">4</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> |           </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">16</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">2</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> rows</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span></code></pre></div><p>现在，相比较以前，您不需要写那么复杂的 SQL 语句了。</p><h2 id="更新生成列" tabindex="-1">更新生成列 <a class="header-anchor" href="#更新生成列" aria-label="Permalink to &quot;更新生成列&quot;">​</a></h2><p>你不能直接写入或者更新生成列的值。这会引发错误。我们尝试一下，看看究竟会发生什么。</p><p>让我们先试着插入一个带有生成列值的数据：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">INSERT INTO</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> order_item (goods, price, quantity, total_amount)</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">VALUES</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> (</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">Banana</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">6</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">4</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">24</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">ERROR:  cannot </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">insert into</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> column </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">total_amount</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">DETAIL:  Column </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">total_amount</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> is</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> a </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">generated</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> column.</span></span></code></pre></div><p>让我们再尝试修改生成列的值：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">UPDATE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> order_item</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SET</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> total_amount </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 30</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">WHERE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> goods </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">Apple</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">;</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">ERROR:  column </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">total_amount</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> can only be updated </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">to</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> DEFAULT</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">DETAIL:  Column </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">total_amount</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> is</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> a </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">generated</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> column.</span></span></code></pre></div><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;">​</a></h2><p>在本文中，我们学习了 PostgreSQL 生成列的用法。以下是本文的要点内容：</p><ul><li>生成列是一个其值可以自动被计算得出的列。</li><li>生成列有两种类型：<code>VIRTUAL</code> 和 <code>STORED</code>。 PostgreSQL 当前支持持存储生成列。</li><li>生成列的值不能被写入或者修改。</li></ul>`,48)])])}const D=i(l,[["render",h]]);export{g as __pageData,D as default};
