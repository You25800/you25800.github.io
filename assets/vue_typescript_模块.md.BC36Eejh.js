import{_ as s,c as a,o as t,b3 as h}from"./chunks/framework.CatkIGlB.js";const o=JSON.parse('{"title":"模块","description":"","frontmatter":{},"headers":[],"relativePath":"vue/typescript/模块.md","filePath":"vue/typescript/模块.md","lastUpdated":1694392708000}'),l={name:"vue/typescript/模块.md"};function n(k,i,p,e,D,r){return t(),a("div",null,[...i[0]||(i[0]=[h(`<h1 id="模块" tabindex="-1">模块 <a class="header-anchor" href="#模块" aria-label="Permalink to &quot;模块&quot;">​</a></h1><p>JavaScript 有着悠久的历史，有处理模块化代码的不同方式。 自 2012 年以来，TypeScript 已经实现了对许多这些格式的支持，但随着时间的推移，社区和 JavaScript 规范已经融合到一种称为 ES 模块（或 ES6 模块）的格式上。您可能将其称为 / 语法。<code>import\`\`export</code></p><p>ES 模块于 2015 年添加到 JavaScript 规范中，到 2020 年，它在大多数 Web 浏览器和 JavaScript 运行时中得到了广泛的支持。</p><p>为了重点讨论，该手册将涵盖 ES 模块及其流行的前体 CommonJS 语法，您可以在模块下的参考部分找到有关其他<a href="https://www.typescriptlang.org/docs/handbook/modules.html" target="_blank" rel="noreferrer">模块</a>模式的信息。<code>module.exports =</code></p><h2 id="如何定义javascript模块" tabindex="-1">如何定义JavaScript模块 <a class="header-anchor" href="#如何定义javascript模块" aria-label="Permalink to &quot;如何定义JavaScript模块&quot;">​</a></h2><p>在TypeScript中，就像在 ECMAScript 2015 中一样，任何包含顶级或模块的文件都被视为模块。<code>import export</code></p><p>相反，没有任何顶级导入或导出声明的文件被视为其内容在全局范围内可用的脚本（因此也可用于模块）。</p><p>模块在其自己的范围内执行，而不是在全局范围内执行。这意味着在模块中声明的变量、函数、类型等在模块外部不可见，除非使用其中一个导出表单显式导出它们。相反，要使用从不同模块导出的变量、函数、类、接口等，必须使用导入表单之一导入它。</p><h2 id="非模块" tabindex="-1">非模块 <a class="header-anchor" href="#非模块" aria-label="Permalink to &quot;非模块&quot;">​</a></h2><p>在我们开始之前，了解 TypeScript 认为模块是什么很重要。JavaScript 规范声明任何没有声明或顶级的 JavaScript 文件都应被视为脚本而不是模块。 <code>import</code> <code>export</code> <code>await</code></p><p>在脚本文件中，变量和类型被声明为在共享全局范围内，并且假定您将使用 <code>outFile</code> 编译器选项将多个输入文件合并到一个输出文件中，或者在 HTML 中使用多个标记来加载这些文件（按正确的顺序！） <code>&lt;script&gt;</code></p><p>如果你有一个当前没有任何 s 或 s 的文件，但你希望被视为一个模块，请添加以下行： <code>import</code> <code>export</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {};</span></span></code></pre></div><p>这会将文件理性为不导出任何内容的模块。无论模块目标如何，此语法都有效。</p><h2 id="typescript中的模块" tabindex="-1">TypeScript中的模块 <a class="header-anchor" href="#typescript中的模块" aria-label="Permalink to &quot;TypeScript中的模块&quot;">​</a></h2><p>在TypeScript中编写基于模块的代码时，需要考虑三个主要事项：</p><ul><li><strong>语法</strong>：我想使用什么语法来导入和导出内容？</li><li><strong>模块解析</strong>：模块名称（或路径）和磁盘上的文件之间有什么关系？</li><li><strong>模块输出目标</strong>：我发出的 JavaScript 模块应该是什么样子？</li></ul><h3 id="es-模块语法" tabindex="-1">ES 模块语法 <a class="header-anchor" href="#es-模块语法" aria-label="Permalink to &quot;ES 模块语法&quot;">​</a></h3><p>可以通过以下方式声明导出：<code>export default</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">// @filename: hello.ts</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> default</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> function</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> helloWorld</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">()</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  console</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">log</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">Hello, world!</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">)</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>然后通过以下方式导入：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> helloWorld </span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">from</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">./hello.js</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">helloWorld</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">()</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span></code></pre></div><p>除了默认导出之外，您还可以通过省略以下方式导出多个变量和函数：<code>export default</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">// @filename: maths.ts</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> var</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> pi </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 3.14</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> let</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> squareTwo </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 1.41</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> const</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> phi </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 1.61</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> class</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> RandomNumberGenerator</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> function</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> absolute</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;">num</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> number</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">  if</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;"> (</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">num</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &lt;</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">) </span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">return</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> num</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> *</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> -</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">  return</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> num</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>这些可以通过语法在另一个文件中使用：<code>import</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">pi</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> phi</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> absoluate</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">}</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> from</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">./maths.js</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">console</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">log</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(pi)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> absPhi </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> absoluate</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(phi)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span></code></pre></div><h2 id="重新导出" tabindex="-1">重新导出 <a class="header-anchor" href="#重新导出" aria-label="Permalink to &quot;重新导出&quot;">​</a></h2><p>我们经常会去扩展其它模块，并且只导出那个模块的部分内容。 重新导出功能并不会在当前模块导入那个模块或定义一个新的局部变量。</p><h5 id="parseintbasedzipcodevalidator-ts" tabindex="-1">ParseIntBasedZipCodeValidator.ts <a class="header-anchor" href="#parseintbasedzipcodevalidator-ts" aria-label="Permalink to &quot;ParseIntBasedZipCodeValidator.ts&quot;">​</a></h5><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> class</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ParseIntBasedZipCodeValidator</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">    isAcceptable</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;">s</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> string</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">        return</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> s</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">length</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> ===</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 5</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &amp;&amp;</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> parseInt</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">s</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">toString</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">() </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">===</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> s</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    }</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">// 导出原先的验证器但做了重命名</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">ZipCodeValidator</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> as</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> RegExpBasedZipCodeValidator</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">}</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> from</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">./ZipCodeValidator</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span></code></pre></div><p>或者一个模块可以包裹多个模块，并把他们导出的内容联合在一起通过语法：<code>export * from &quot;module&quot;</code>。</p><h5 id="allvalidators-ts" tabindex="-1">AllValidators.ts <a class="header-anchor" href="#allvalidators-ts" aria-label="Permalink to &quot;AllValidators.ts&quot;">​</a></h5><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> *</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> from</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">./StringValidator</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;"> // exports interface StringValidator</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> *</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> from</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">./LettersOnlyValidator</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;"> // exports class LettersOnlyValidator</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> *</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> from</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">./ZipCodeValidator</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">  // exports class ZipCodeValidator</span></span></code></pre></div><h2 id="附加导入语法" tabindex="-1">附加导入语法 <a class="header-anchor" href="#附加导入语法" aria-label="Permalink to &quot;附加导入语法&quot;">​</a></h2><p>可以使用如下格式重命名导入：<code>import {old as new}</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">pi</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> as</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> π</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">}</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> from</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">./maths.js</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">console</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">log</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(π)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span></code></pre></div><p>您可以将上述语法混合并匹配为一个：<code>import</code></p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-eIxBx" id="tab-i8ZesCK" checked><label data-title="maths.ts" for="tab-i8ZesCK">maths.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> const</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> pi </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 3.14</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> default</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> class</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> RandomNumberGenerator</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">{}</span></span></code></pre></div></div></div><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-cBWJh" id="tab-R91jpzb" checked><label data-title="app.ts" for="tab-R91jpzb">app.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> RandomNumberGenerator</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">pi</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> as</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> π</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">}</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> from</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">./maths.js</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">RandomNumberGenerator</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">console</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">log</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(π)</span></span></code></pre></div></div></div><p>你可以使用以下命令将所有导出的对象放入单个命名空间中：<code>* as name</code></p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-Ubbcr" id="tab-vrfbb_0" checked><label data-title="app.ts" for="tab-vrfbb_0">app.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> *</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> as</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> math </span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">from</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">./maths.js</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">console</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">log</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(math</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">pi)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> positivePhi </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> math</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">absolute</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(math</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">phi)</span></span></code></pre></div></div></div><p>你可以通过以下方式导入文件而不将任何变量包含到当前模块中：<code>import &quot;./file&quot;</code></p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-mc1bw" id="tab-2DeXhVx" checked><label data-title="app.ts" for="tab-2DeXhVx">app.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">./maths.js</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">console</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">log</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">3.14</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span></code></pre></div></div></div><p>在这种情况下，不执行任何操作。然而，其中的所有代码都经过评估，这可能会触发影响其他对象的副作用。<code>import maths.ts</code></p><h2 id="typescript特定的es模块语法" tabindex="-1">TypeScript特定的ES模块语法 <a class="header-anchor" href="#typescript特定的es模块语法" aria-label="Permalink to &quot;TypeScript特定的ES模块语法&quot;">​</a></h2><p>可以使用与JavaScript值相同的语法导出和导入类型：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-nYtDn" id="tab-QBuvUw7" checked><label data-title="animal.ts" for="tab-QBuvUw7">animal.ts</label><input type="radio" name="group-nYtDn" id="tab-T80w9p1"><label data-title="app.ts" for="tab-T80w9p1">app.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> type</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Cat</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;"> breed</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> string</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;"> yearOfBirth</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> number</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> interface</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Dog</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">  breeds</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> string</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">[]</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">  yearOfBirth</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> number</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> Cat</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> Dog</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> }</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> from</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">./animal.js</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">type</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Animals</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Cat</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Dog</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span></code></pre></div></div></div><p>TypeScript通过两个概念扩展了语法，用于声明类型的导入：<code>import</code></p><h2 id="import-type" tabindex="-1">import type <a class="header-anchor" href="#import-type" aria-label="Permalink to &quot;import type&quot;">​</a></h2><p>这是一个只能导入类型的<code>import</code>语句：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-cJx88" id="tab-Y7oy6Ql" checked><label data-title="aniamal.ts" for="tab-Y7oy6Ql">aniamal.ts</label><input type="radio" name="group-cJx88" id="tab-wltNXh8"><label data-title="valid.ts" for="tab-wltNXh8">valid.ts</label><input type="radio" name="group-cJx88" id="tab-FsY3xms"><label data-title="app.ts" for="tab-FsY3xms">app.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> type</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Cat</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">breed</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> string</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;"> yearOfBirth</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> number</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">};</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> type</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Dog</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;"> breeds</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> string</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">[]</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;"> yearOfBirth</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> number</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">};</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> const</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> createCatName </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> ()</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> =&gt;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">fluffy</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> type</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">Cat</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> Dog</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">}</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> from</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">./animal.js</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> type</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Animals</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Cat</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Dog</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> type</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">createCatName</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">}</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> from</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">./animal.js</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> name </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> createCatName</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">()</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">// &quot;createCatName&quot; 是使用 &quot;import type&quot; 导入的，因此不能用作值。</span></span></code></pre></div></div></div><h2 id="lnline-imports-内联导入type" tabindex="-1">lnline imports 内联导入type <a class="header-anchor" href="#lnline-imports-内联导入type" aria-label="Permalink to &quot;lnline imports 内联导入type&quot;">​</a></h2><p>TypeScript 4.5 还允许单个导入添加前缀，以所求导入的引用是一种类型：<code>type</code></p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-PWXdE" id="tab-Te1g-TM" checked><label data-title="app.ts" for="tab-Te1g-TM">app.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> createCatName</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> type</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> Cat</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> type</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> Dog</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">}</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> from</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">./animal</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> type</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Animals</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Cat</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Dog</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> name </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> createCatName</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">()</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span></code></pre></div></div></div><p>这些一起允许非 TypeScript 转译器（如 Babel、swc 或 esbuild）知道可以安全删除哪些导入。</p><h2 id="具有-commonjs-行为的-es-模块语法" tabindex="-1">具有 CommonJS 行为的 ES 模块语法 <a class="header-anchor" href="#具有-commonjs-行为的-es-模块语法" aria-label="Permalink to &quot;具有 CommonJS 行为的 ES 模块语法&quot;">​</a></h2><p>TypeScript具有与CommonJS和AMD直接相关的ES模块语法。在大多数情况下，使用ES模块的导入与这些环境中的导入相同，但此语法可确保TypeScript 文件与CommonJS 输出进行1比1的匹配：<code>require require</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> fs </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> require</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">fs</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span>
<span class="line"><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> code </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> fs</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">readFileSync</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">hello.ts</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">utf8</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span></code></pre></div><p>可以在<a href="https://www.typescriptlang.org/docs/handbook/modules.html#export--and-import--require" target="_blank" rel="noreferrer">模块参考页</a>中了解有关此语法的详细信息。</p><h2 id="commonjs-语法" tabindex="-1">CommonJS 语法 <a class="header-anchor" href="#commonjs-语法" aria-label="Permalink to &quot;CommonJS 语法&quot;">​</a></h2><p>CommonJS 是 npm 上大多数模块交付的格式。即使您使用上面的 ES 模块语法进行编写，简要了解 CommonJS 语法的工作原理也将帮助您更轻松地进行调试。</p><h3 id="exporting" tabindex="-1">Exporting <a class="header-anchor" href="#exporting" aria-label="Permalink to &quot;Exporting&quot;">​</a></h3><p>标识符是通过在名为 的全局变量上设置属性来导出的。 <code>exports</code> <code>module</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">function</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> absolute</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;">num</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> number</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">  if</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;"> (</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">num</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &lt;</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">) </span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">return</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> num</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> *</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> -</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">  return</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> num</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> </span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">module.exports</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">  pi</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 3.14</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">  squareTwo</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 1.41</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">  phi</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 1.61</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  absolute</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">};</span></span></code></pre></div><p>然后可以通过语句导入这些文件： <code>require</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> maths </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> require</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">./maths</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">maths</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">pi</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span></code></pre></div><p>或者你可以使用 JavaScript 中的解构功能来简化一下</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> squareTwo </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">}</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> require</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">./maths</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">squareTwo</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span></code></pre></div><h3 id="commonjs-和-es-模块互操作" tabindex="-1">CommonJS 和 ES 模块互操作 <a class="header-anchor" href="#commonjs-和-es-模块互操作" aria-label="Permalink to &quot;CommonJS 和 ES 模块互操作&quot;">​</a></h3><p>关于默认导入和模块命名空间对象导入之间的区别，CommonJS 和 ES 模块之间的功能不匹配。 TypeScript 有一个编译器标志，可以减少两组不同的约束与 <code>esModuleInterop</code> 之间的摩擦。</p><h2 id="typescript-的模块解析选项" tabindex="-1">TypeScript 的模块解析选项 <a class="header-anchor" href="#typescript-的模块解析选项" aria-label="Permalink to &quot;TypeScript 的模块解析选项&quot;">​</a></h2><p>模块解析是从 or 语句中获取字符串并确定该字符串引用哪个文件的过程。 <code>import</code> <code>require</code></p><p>TypeScript 包含两种解决策略：Classic 和 Node。包含经典（当编译器选项 <code>module</code> 不是 时的默认值）是为了向后兼容。 Node 策略复制了 Node.js 在 CommonJS 模式下的工作方式，并对 和 进行了额外的检查。 <code>commonjs</code> <code>.ts</code> <code>.d.ts</code></p><p>有许多 TSConfig 标志会影响 TypeScript 中的模块策略： <code>moduleResolution</code> 、 <code>baseUrl</code> 、 <code>paths</code> 、 <code>rootDirs</code> 。</p><p>关这些策略如何发挥作用的完整详细信息，您可以查阅模块解决方案。</p><h2 id="typescript-的模块输出选项" tabindex="-1">TypeScript 的模块输出选项 <a class="header-anchor" href="#typescript-的模块输出选项" aria-label="Permalink to &quot;TypeScript 的模块输出选项&quot;">​</a></h2><p>有两个选项会影响发出的 JavaScript 输出：</p><ul><li><code>target</code> 确定哪些 JS 功能被降级（转换为在较旧的 JavaScript 运行时中运行）以及哪些功能保持不变</li><li><code>module</code> 决定模块之间使用什么代码进行交互</li></ul><p>您使用哪个 <code>target</code> 由您希望在其中运行 TypeScript 代码的 JavaScript 运行时中可用的功能决定。这可能是：您支持的最旧的 Web 浏览器、您希望使用的 Node.js 的最低版本运行时或可能来自运行时的独特约束 - 例如 Electron。</p><p>模块之间的所有通信都是通过模块加载器进行的，编译器选项 <code>module</code> 确定使用哪一个。在运行时，模块加载器负责在执行模块之前查找并执行模块的所有依赖项。</p><p>例如，下面是一个使用 ES 模块语法的 TypeScript 文件，展示了 <code>module</code> 的几个不同选项：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> valueOfPi</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> }</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> from</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">./constants.js</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> </span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> const</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> twoPi </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> valueOfPi </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 2</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span></code></pre></div><h3 id="es2020" tabindex="-1">ES2020 <a class="header-anchor" href="#es2020" aria-label="Permalink to &quot;ES2020&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> valueOfPi</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> }</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> from</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">./constants.js</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> const</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> twoPi </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> valueOfPi </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 2</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span></code></pre></div><h3 id="commonjs" tabindex="-1">CommonJS <a class="header-anchor" href="#commonjs" aria-label="Permalink to &quot;CommonJS&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">use strict</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">Object</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">defineProperty</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">exports,</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">__esModule</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;"> value</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#FF5370;--shiki-dark:#FF9CAC;"> true</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> }</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">exports.</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">twoPi </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> void</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> constants_js_1 </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> require</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">./constants.js</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">exports.</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">twoPi </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> constants_js_1</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">valueOfPi </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 2</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span></code></pre></div><h3 id="umd" tabindex="-1">UMD <a class="header-anchor" href="#umd" aria-label="Permalink to &quot;UMD&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">function</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> (</span><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;">factory</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">    if</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;"> (</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">typeof</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> module</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> ===</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">object</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &amp;&amp;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> typeof</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> module.exports</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> ===</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">object</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">) </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">{</span></span>
<span class="line"><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">        var</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> v</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> factory</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">require</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> exports</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">        if</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;"> (</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">v</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> !==</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> undefined</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">) </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">module.exports</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> v</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    }</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">    else</span><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> if</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;"> (</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">typeof</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> define</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> ===</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">function</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &amp;&amp;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> define</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">amd</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">) </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">{</span></span>
<span class="line"><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">        define</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">([</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">require</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">exports</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">./constants.js</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">]</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> factory</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    }</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">}</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)(</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">function</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> (</span><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;">require</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;"> exports</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">use strict</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    Object</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">defineProperty</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">exports,</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">__esModule</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;"> value</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#FF5370;--shiki-dark:#FF9CAC;"> true</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> }</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    exports.</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">twoPi</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> void</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">    const</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> constants_js_1</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> require</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">./constants.js</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    exports.</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">twoPi</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> constants_js_1</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">valueOfPi</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> *</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 2</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">}</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">;</span></span></code></pre></div><h2 id="typescript-命名空间" tabindex="-1">TypeScript 命名空间 <a class="header-anchor" href="#typescript-命名空间" aria-label="Permalink to &quot;TypeScript 命名空间&quot;">​</a></h2><p>TypeScript 有自己的模块格式，该格式早于 ES 模块标准。此语法具有许多用于创建复杂定义文件的有用功能，并且在DefinitelyTyped 中仍然得到积极使用。虽然未弃用，但命名空间中的大多数功能都存在于 ES 模块中，我们建议您使用它来与 JavaScript 的方向保持一致。您可以在命名空间参考页面中了解有关命名空间的更多信息。 <code>namespaces</code></p>`,90)])])}const y=s(l,[["render",n]]);export{o as __pageData,y as default};
