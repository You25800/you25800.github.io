import{_ as i,c as a,o as e,b3 as l}from"./chunks/framework.CatkIGlB.js";const D=JSON.parse('{"title":"PostgreSQL IN 运算符用法与实例","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/base/IN.md","filePath":"database/postgreSQL/base/IN.md","lastUpdated":1690289709000}'),h={name:"database/postgreSQL/base/IN.md"};function t(n,s,p,k,d,r){return e(),a("div",null,[...s[0]||(s[0]=[l(`<h1 id="postgresql-in-运算符用法与实例" tabindex="-1">PostgreSQL IN 运算符用法与实例 <a class="header-anchor" href="#postgresql-in-运算符用法与实例" aria-label="Permalink to &quot;PostgreSQL IN 运算符用法与实例&quot;">​</a></h1><p>本文介绍了在 PostgreSQL 中如何使用 <code>IN</code> 运算符检查一个值列表是否包含一个指定的值。</p><p>在 PostgreSQL 中，<code>IN</code> 运算符是一个布尔运算符，用来检查一个值列表是否包含一个指定的值。如果值列表包含了指定的值，则 <code>IN</code> 运算符返回真，否则它返回假。</p><h2 id="postgresql-in-运算符语法" tabindex="-1">PostgreSQL IN 运算符语法 <a class="header-anchor" href="#postgresql-in-运算符语法" aria-label="Permalink to &quot;PostgreSQL IN 运算符语法&quot;">​</a></h2><p>要检查一个值是否位于一个值列表之内，请按照以下语法使用 <code>IN</code> 运算符：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">expr </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">IN</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> (value1, value2, ...)</span></span></code></pre></div><p>或者</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">expr </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">IN</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> (subquery)</span></span></code></pre></div><p>这里：</p><ul><li><code>expr</code> 可以是一个字段名、值或其他的表达式（比如函数调用、运算等）。</li><li><code>(value1, value2, ...)</code> 是一个值列表，多个值之间使用 <code>,</code> 分隔，并使用小括号 <code>()</code> 将它们包围起来。</li><li><code>value1</code> 是具体的值，ke 比如：<code>1</code>, <code>2</code>, <code>&#39;A&#39;</code>, <code>&#39;B&#39;</code> 等。</li><li><code>subquery</code> 是一个只返回一个列的<a href="/database/postgreSQL/base/子查询.html">子查询</a>。</li></ul><p>如果值列表或者子查询返回的值中包含了 <code>expr</code>，<code>IN</code> 运算符返回真，否则它返回假。</p><p><code>IN</code> 运算符的否定操作是 <code>NOT IN</code>。</p><h2 id="in-vs-or" tabindex="-1"><code>IN</code> vs <code>OR</code> <a class="header-anchor" href="#in-vs-or" aria-label="Permalink to &quot;\`IN\` vs \`OR\`&quot;">​</a></h2><p><code>IN</code> 表达式都可以使用 <code>OR</code> 运算符改写。</p><p>比如：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">val </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">IN</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> (</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">2</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">3</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span></code></pre></div><p>等同于如下使用 <code>OR</code> 的表达式：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">val </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 1</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> OR</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> val </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 2</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> OR</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> val </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 3</span></span></code></pre></div><p>同理，<code>NOT IN</code> 表达式都可以使用 <code>AND</code> 运算符改写。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">val </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">NOT</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> IN</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> (</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">2</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">3</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span></code></pre></div><p>等同于如下使用 <code>AND</code> 的表达式：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">val </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&lt;&gt;</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 1</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> AND</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> val </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&lt;&gt;</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 2</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> OR</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> val </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&lt;&gt;</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 3</span></span></code></pre></div><h2 id="postgresql-in-运算符实例" tabindex="-1">PostgreSQL IN 运算符实例 <a class="header-anchor" href="#postgresql-in-运算符实例" aria-label="Permalink to &quot;PostgreSQL IN 运算符实例&quot;">​</a></h2><p>我们将使用 <a href="/database/sakila/">Sakila 示例数据库</a> 中的表进行演示，请您先<a href="./示例数据库.html">在 PostgreSQL 中安装 Sakila 示例数据库</a>。</p><p>在 Sakila 示例数据库中， <a href="/database/sakila/演员表.html"><code>actor</code></a>存储了所有的演员的信息。</p><p>要从 <code>actor</code> 表中查询姓氏为 <code>ALLEN</code> 或 <code>DAVIS</code> 的所有演员，请使用以下带有 <code>IN</code> 运算符的语句：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> *</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> actor</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">WHERE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> last_name </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">IN</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> (</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">ALLEN</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">DAVIS</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> actor_id</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> first_name</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> last_name</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">     last_update</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">----------+------------+-----------+---------------------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">        4</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> JENNIFER</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">   |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> DAVIS</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">     |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 2006-02-15</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> 04:34:33</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">      101</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> SUSAN</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">      |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> DAVIS</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">     |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 2006-02-15</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> 04:34:33</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">      110</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> SUSAN</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">      |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> DAVIS</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">     |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 2006-02-15</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> 04:34:33</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">      118</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> CUBA</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">       |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ALLEN</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">     |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 2006-02-15</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> 04:34:33</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">      145</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> KIM</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">        |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ALLEN</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">     |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 2006-02-15</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> 04:34:33</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">      194</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> MERYL</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">      |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ALLEN</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">     |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 2006-02-15</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> 04:34:33</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">6</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> rows</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span></span></code></pre></div><p>您可以使用 <code>OR</code> 运算符改写上面的语句：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> *</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> actor</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">WHERE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> last_name </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">ALLEN</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">  OR</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> last_name </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">DAVIS</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">;</span></span></code></pre></div><h3 id="在-postgresql-in-中使用子查询" tabindex="-1">在 PostgreSQL <code>IN</code> 中使用子查询 <a class="header-anchor" href="#在-postgresql-in-中使用子查询" aria-label="Permalink to &quot;在 PostgreSQL \`IN\` 中使用子查询&quot;">​</a></h3><p>要从 film 表中检索拥有库存的影片的数量，您可以使用带有子查询的 PostgreSQL <code>IN</code> 的表达式：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> COUNT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> film</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">WHERE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> film_id </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">IN</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> (</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">    SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> film_id</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">    FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> inventory</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  );</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> count</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">-------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">   958</span></span></code></pre></div><p>通常，带有子查询的 PostgreSQL <code>IN</code> 的表达式都可以使用 <a href="/database/postgreSQL/base/EXISTS.html"><code>EXISTS</code></a> 改写，并且 <code>EXISTS</code> 表达式具有更好的效率。上面的语句等同于以下使用 <code>EXISTS</code> 的语句：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> COUNT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> film f</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">WHERE</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> EXISTS</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> (</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">    SELECT</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 1</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">    FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> inventory i</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">    WHERE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> i.film_id </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> f.film_id</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  );</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> count</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">-------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">   958</span></span></code></pre></div><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;">​</a></h2><p>PostgreSQL <code>IN</code> 运算符是一个布尔运算符，用来检查一个值列表是否包含一个指定的值。如果值列表包含了指定的值，则 <code>IN</code> 运算符返回真，否则它返回假。</p>`,39)])])}const o=i(h,[["render",t]]);export{D as __pageData,o as default};
