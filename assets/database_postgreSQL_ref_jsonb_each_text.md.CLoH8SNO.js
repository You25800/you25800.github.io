import{_ as a,c as i,o as t,b3 as e}from"./chunks/framework.CatkIGlB.js";const c=JSON.parse('{"title":"PostgreSQL jsonb_each_text() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/jsonb_each_text.md","filePath":"database/postgreSQL/ref/jsonb_each_text.md","lastUpdated":1690180485000}'),h={name:"database/postgreSQL/ref/jsonb_each_text.md"};function n(l,s,p,k,o,d){return t(),i("div",null,[...s[0]||(s[0]=[e(`<h1 id="postgresql-jsonb-each-text-函数" tabindex="-1">PostgreSQL jsonb_each_text() 函数 <a class="header-anchor" href="#postgresql-jsonb-each-text-函数" aria-label="Permalink to &quot;PostgreSQL jsonb\\_each\\_text() 函数&quot;">​</a></h1><p>PostgreSQL <code>jsonb_each_text()</code> 函数将一个指定的 JSONB 对象顶层成员扩展为一个键值对（键和值都是文本类型）的集合。</p><h2 id="jsonb-each-text-语法" tabindex="-1"><code>jsonb_each_text()</code> 语法 <a class="header-anchor" href="#jsonb-each-text-语法" aria-label="Permalink to &quot;\`jsonb_each_text()\` 语法&quot;">​</a></h2><p>这是 PostgreSQL <code>jsonb_each_text()</code> 函数的语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">jsonb_each_text(any_object JSONB) </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> SETOF RECORD(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">key</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> TEXT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">value</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> TEXT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>any_object</code></em></p><p>必需的。 一个 JSONB 对象。</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>jsonb_each_text()</code> 函数返回一个键值对（键和值都是文本类型）的集合，其中的两列 <code>key</code> 和 <code>value</code>，分别对应了 JSONB 对象中的最高层的键值对中的键和值。</p><h2 id="jsonb-each-text-示例" tabindex="-1"><code>jsonb_each_text()</code> 示例 <a class="header-anchor" href="#jsonb-each-text-示例" aria-label="Permalink to &quot;\`jsonb_each_text()\` 示例&quot;">​</a></h2><p>本示例展示了如何使用 PostgreSQL <code>jsonb_each_text()</code> 函数将一个 JSONB 对象扩展为一个键值对的集合。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> jsonb_each_text(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">{&quot;name&quot;: &quot;Tom&quot;, &quot;age&quot;: 20, &quot;hobbies&quot;: [&quot;sports&quot;, &quot;cars&quot;]}</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           jsonb_each_text</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> (</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">name,Tom</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> (</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">age,20</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> (</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">hobbies,</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">&quot;[&quot;&quot;sports&quot;&quot;, &quot;&quot;cars&quot;&quot;]&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span></span></code></pre></div><p>由于 <code>jsonb_each_text()</code> 函数返回值为 <code>SETOF</code> 类型，因此您可以在 <code>SELECT * FROM</code> 语句中使用 <code>jsonb_each_text()</code>：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> *</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> jsonb_each_text(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">{&quot;name&quot;: &quot;Tom&quot;, &quot;age&quot;: 20, &quot;hobbies&quot;: [&quot;sports&quot;, &quot;cars&quot;]}</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">   key</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">   |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">       value</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">---------+--------------------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> name</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Tom</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> age</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">     |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 20</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> hobbies</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> [</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">sports</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">cars</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">]</span></span></code></pre></div><p>这里返回了 2 列 <code>key</code> 和 <code>value</code>，分别对应了 JSONB 对象中键值对的键和值。</p><p>注意，这里的 <code>value</code> 列的类型是文本 <code>TEXT</code>。</p><p>您可以使用自定义列名，例如：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    *</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    jsonb_each_text(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">{&quot;name&quot;: &quot;Tom&quot;, &quot;age&quot;: 20, &quot;hobbies&quot;: [&quot;sports&quot;, &quot;cars&quot;]}</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">    AS</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> x(k, v);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">    k</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">         v</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">---------+--------------------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> name</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Tom</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> age</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">     |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 20</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> hobbies</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> [</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">sports</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">cars</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">]</span></span></code></pre></div>`,21)])])}const D=a(h,[["render",n]]);export{c as __pageData,D as default};
