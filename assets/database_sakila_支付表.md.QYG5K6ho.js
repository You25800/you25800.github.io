import{_ as t,c as e,o as n,b3 as s}from"./chunks/framework.CatkIGlB.js";const _=JSON.parse('{"title":"支付表 payment","description":"","frontmatter":{},"headers":[],"relativePath":"database/sakila/支付表.md","filePath":"database/sakila/支付表.md","lastUpdated":1690270507000}'),d={name:"database/sakila/支付表.md"};function p(l,a,o,c,i,r){return n(),e("div",null,[...a[0]||(a[0]=[s(`<h1 id="支付表-payment" tabindex="-1">支付表 payment <a class="header-anchor" href="#支付表-payment" aria-label="Permalink to &quot;支付表 payment&quot;">​</a></h1><p>本文介绍了 Sakila 数据库中的 payment 表的表结构以及与其他表的关系。</p><p><code>payment</code> 表记录了客户的每笔付款，以及金额和所支付的租金等信息。</p><p><code>payment</code> 表指向了<a href="./客户表.html">客户表 <code>customer</code></a>，<a href="./租赁表.html">租赁表 <code>rental</code></a> 和 <a href="./员工表.html">员工表 <code>staff</code></a> 表。</p><h2 id="表结构" tabindex="-1">表结构 <a class="header-anchor" href="#表结构" aria-label="Permalink to &quot;表结构&quot;">​</a></h2><p><code>payment</code> 表结构如下：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span>+--------------+-------------------+------+-----+-------------------+-----------------------------------------------+</span></span>
<span class="line"><span>| Field        | Type              | Null | Key | Default           | Extra                                         |</span></span>
<span class="line"><span>+--------------+-------------------+------+-----+-------------------+-----------------------------------------------+</span></span>
<span class="line"><span>| payment_id   | smallint unsigned | NO   | PRI | NULL              | auto_increment                                |</span></span>
<span class="line"><span>| customer_id  | smallint unsigned | NO   | MUL | NULL              |                                               |</span></span>
<span class="line"><span>| staff_id     | tinyint unsigned  | NO   | MUL | NULL              |                                               |</span></span>
<span class="line"><span>| rental_id    | int               | YES  | MUL | NULL              |                                               |</span></span>
<span class="line"><span>| amount       | decimal(5,2)      | NO   |     | NULL              |                                               |</span></span>
<span class="line"><span>| payment_date | datetime          | NO   |     | NULL              |                                               |</span></span>
<span class="line"><span>| last_update  | timestamp         | YES  |     | CURRENT_TIMESTAMP | DEFAULT_GENERATED on update CURRENT_TIMESTAMP |</span></span>
<span class="line"><span>+--------------+-------------------+------+-----+-------------------+-----------------------------------------------+</span></span></code></pre></div><h2 id="字段说明" tabindex="-1">字段说明 <a class="header-anchor" href="#字段说明" aria-label="Permalink to &quot;字段说明&quot;">​</a></h2><table tabindex="0"><thead><tr><th>字段</th><th>说明</th></tr></thead><tbody><tr><td><code>payment_id</code></td><td>用于唯一标识每笔付款的代理主键。</td></tr><tr><td><code>customer_id</code></td><td>正在应用其余额的客户。这是对 <code>customer</code> 表的外键引用。</td></tr><tr><td><code>staff_id</code></td><td>处理付款的员工。这是对 <code>staff</code> 表的外键引用。</td></tr><tr><td><code>rental_id</code></td><td>付款所适用的租金。这是可选的，因为有些付款是用于支付未付费用，可能与租金没有直接关系。</td></tr><tr><td><code>amount</code></td><td>支付金额。</td></tr><tr><td><code>payment_date</code></td><td>付款处理的日期。</td></tr><tr><td><code>last_update</code></td><td>该行的创建时间或最近更新时间。</td></tr></tbody></table>`,9)])])}const h=t(d,[["render",p]]);export{_ as __pageData,h as default};
