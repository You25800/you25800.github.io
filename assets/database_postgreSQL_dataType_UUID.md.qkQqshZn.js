import{_ as a,c as i,o as e,b3 as t}from"./chunks/framework.CatkIGlB.js";const g=JSON.parse('{"title":"PostgreSQL UUID 数据类型介绍","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/dataType/UUID.md","filePath":"database/postgreSQL/dataType/UUID.md","lastUpdated":1689663255000}'),n={name:"database/postgreSQL/dataType/UUID.md"};function l(p,s,h,d,k,r){return e(),i("div",null,[...s[0]||(s[0]=[t(`<h1 id="postgresql-uuid-数据类型介绍" tabindex="-1">PostgreSQL UUID 数据类型介绍 <a class="header-anchor" href="#postgresql-uuid-数据类型介绍" aria-label="Permalink to &quot;PostgreSQL UUID 数据类型介绍&quot;">​</a></h1><p>本文介绍了 PostgreSQL UUID 数据类型以及如何使用 UUID 作为主键。</p><p>UUID 是一种通用唯一标识符，它由 32 为十六进制数字以及连字符组成。</p><p>与 <a href="/database/postgreSQL/databaseAndTable/SERIAL自增列.html"><code>SERIAL</code></a>，<a href="/database/postgreSQL/databaseAndTable/标识列.html">标识列</a>，和 <a href="/database/postgreSQL/databaseAndTable/SEQUENCE序列生成器.html">序列</a> 相比， UUID 具有全局的唯一性，而不是数据库中的唯一性。 UUID 更适合在集群环境中作为唯一标识符。</p><p>PostgreSQL 支持 UUID 数据类型，以存储 UUID 数据。</p><h2 id="生成-uuid-值" tabindex="-1">生成 UUID 值 <a class="header-anchor" href="#生成-uuid-值" aria-label="Permalink to &quot;生成 UUID 值&quot;">​</a></h2><p>要在 PostgreSQL 中生成 UUID，请使用 <code>gen_random_uuid()</code> 函数，如下：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> gen_random_uuid</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">()</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           gen_random_uuid</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">--------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> d1f7b7c1-c0b6-4707-aa17-5055b09b3ae8</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">1</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> row</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span></span></code></pre></div><p><code>gen_random_uuid()</code> 函数生成一个 v4 版本的 UUID，要生成其他版本的 UUID，请使用 <code>uuid-ossp</code> 模块，并使用它的函数：</p><ul><li><a href="/database/postgreSQL_ref/uuid_generate_v1.html"><code>uuid_generate_v1()</code></a></li><li><a href="/database/postgreSQL_ref/uuid_generate_v1mc.html"><code>uuid_generate_v1mc()</code></a></li><li><a href="/database/postgreSQL_ref/uuid_generate_v3.html"><code>uuid_generate_v3()</code></a></li><li><a href="/database/postgreSQL_ref/uuid_generate_v4.html"><code>uuid_generate_v4()</code></a></li><li><a href="/database/postgreSQL_ref/uuid_generate_v5.html"><code>uuid_generate_v5()</code></a></li></ul><p>有关 UUID 生成函数的更多信息，请查看<a href="https://www.postgresql.org/docs/9.5/static/uuid-ossp.html" target="_blank" rel="noreferrer">uuid-ossp</a>模块文档。</p><p>注意，<code>gen_random_uuid()</code> 函数在 PostgreSQL v13 及以后的版本中才能使用。在之前的版本中，请使用 <code>uuid-ossp</code> 模块提供的函数生成 UUID。</p><h2 id="postgresql-uuid-实例" tabindex="-1">PostgreSQL UUID 实例 <a class="header-anchor" href="#postgresql-uuid-实例" aria-label="Permalink to &quot;PostgreSQL UUID 实例&quot;">​</a></h2><p>在本示例中，您将<a href="/database/postgreSQL/databaseAndTable/创建表.html">创建一个 <code>fruits</code> 表</a>，其<a href="/database/postgreSQL/databaseAndTable/主键.html">主键</a>是 UUID 数据类型。</p><p>使用以下语句创建 <code>fruits</code> 表：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> fruits</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> (</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  id UUID </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">DEFAULT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> gen_random_uuid</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">()</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> PRIMARY KEY</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">,</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">  name</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> VARCHAR</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> NOT NULL</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><p>在 <code>fruits</code> 表中， <code>id</code> 列的数据类型是 <code>UUID</code>，并且由 <code>gen_random_uuid()</code> 函数提供默认值。</p><p>使用下面的语句<a href="/database/postgreSQL/base/INSERT.html">插入一些数据</a>到 <code>fruits</code> 表中：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">INSERT INTO</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> fruits (</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">name</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">VALUES</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    (</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">Apple</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">),</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    (</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">Peach</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">),</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    (</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">Banana</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">RETURNING </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">                  id</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">                  |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">  name</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">--------------------------------------+--------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 980dd890-f7fe-4fff-999d-873516108b2e</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Apple</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 617c7809-cec6-44aa-9ce3-59a988e5bf35</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Peach</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 98edf248-42a2-496d-9b4a-16472f6f0a00</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Banana</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">3</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> rows</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span></span></code></pre></div><p>如您所见，该 <code>id</code> 列已由 <code>gen_random_uuid()</code> 函数生成的 UUID 值填充。</p><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;">​</a></h2><p>本文介绍了 PostgreSQL UUID 数据类型以及如何使用 UUID 作为主键。</p>`,24)])])}const c=a(n,[["render",l]]);export{g as __pageData,c as default};
