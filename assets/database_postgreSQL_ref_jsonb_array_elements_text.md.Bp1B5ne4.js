import{_ as e,c as a,o as t,b3 as i}from"./chunks/framework.CatkIGlB.js";const c=JSON.parse('{"title":"PostgreSQL jsonb_array_elements_text() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/jsonb_array_elements_text.md","filePath":"database/postgreSQL/ref/jsonb_array_elements_text.md","lastUpdated":1690180485000}'),n={name:"database/postgreSQL/ref/jsonb_array_elements_text.md"};function l(r,s,p,h,o,d){return t(),a("div",null,[...s[0]||(s[0]=[i(`<h1 id="postgresql-jsonb-array-elements-text-函数" tabindex="-1">PostgreSQL jsonb_array_elements_text() 函数 <a class="header-anchor" href="#postgresql-jsonb-array-elements-text-函数" aria-label="Permalink to &quot;PostgreSQL jsonb\\_array\\_elements\\_text() 函数&quot;">​</a></h1><p>PostgreSQL <code>jsonb_array_elements_text()</code> 函数将顶层 JSONB 数组扩展为一个文本值的集合。</p><p>此函数与 <a href="./jsonb_array_elements.html"><code>jsonb_array_elements</code></a> 函数类似，不同的是 <code>jsonb_array_elements</code> 函数返回的集合中的数据是 JSONB 类型的。</p><h2 id="jsonb-array-elements-text-语法" tabindex="-1"><code>jsonb_array_elements_text()</code> 语法 <a class="header-anchor" href="#jsonb-array-elements-text-语法" aria-label="Permalink to &quot;\`jsonb_array_elements_text()\` 语法&quot;">​</a></h2><p>这是 PostgreSQL <code>jsonb_array_elements_text()</code> 函数的语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">jsonb_array_elements_text(any_array JSONB) </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> SETOF </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">TEXT</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>any_array</code></em></p><p>必需的。 一个 JSONB 数组。</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>jsonb_array_elements_text()</code> 函数返回一个包含文本值 <code>SETOF</code>，其中的元素为由参数指定的 JSONB 数组中的顶层元素转为的字符串。</p><h2 id="jsonb-array-elements-text-示例" tabindex="-1"><code>jsonb_array_elements_text()</code> 示例 <a class="header-anchor" href="#jsonb-array-elements-text-示例" aria-label="Permalink to &quot;\`jsonb_array_elements_text()\` 示例&quot;">​</a></h2><p>本示例展示了如何使用 PostgreSQL <code>jsonb_array_elements_text()</code> 函数将一个 JSONB 数组扩展为一个文本值的集合。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> jsonb_array_elements_text(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">[1, 2, [3, 4]]</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> jsonb_array_elements_text</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">--------------------------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 1</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 2</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> [</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">3, 4</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">]</span></span></code></pre></div><p>由于 <code>jsonb_array_elements_text()</code> 函数返回值为 <code>SETOF</code> 类型，因此您可以在 <code>SELECT * FROM</code> 语句中使用 <code>jsonb_array_elements_text()</code>：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> *</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> jsonb_array_elements_text(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">[1, 2, [3, 4]]</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> value</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">--------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 1</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 2</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> [</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">3, 4</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">]</span></span></code></pre></div>`,17)])])}const _=e(n,[["render",l]]);export{c as __pageData,_ as default};
