import{_ as i,c as a,o as n,b3 as e}from"./chunks/framework.CatkIGlB.js";const c=JSON.parse('{"title":"PostgreSQL UPDATE ... FROM 用法与实例","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/base/UPDATE_FROM.md","filePath":"database/postgreSQL/base/UPDATE_FROM.md","lastUpdated":1690289709000}'),t={name:"database/postgreSQL/base/UPDATE_FROM.md"};function h(l,s,p,k,d,r){return n(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="postgresql-update-from-用法与实例" tabindex="-1">PostgreSQL UPDATE ... FROM 用法与实例 <a class="header-anchor" href="#postgresql-update-from-用法与实例" aria-label="Permalink to &quot;PostgreSQL UPDATE ... FROM 用法与实例&quot;">​</a></h1><p>PostgreSQL <code>UPDATE...FROM</code> 语句允许您根据另一个表中的值更新表中的行。</p><p>有时候，你需要根据另一个表中的数据更新一个表中的数据。比如：根据产品销量明细表更新销量统计表。</p><p>在 PostgreSQL，您可以使用<a href="/database/postgreSQL/base/子查询.html">子查询</a>做到一点，也可以更加方便地使用 <code>UPDATE...FROM</code> 语句完成它。</p><h2 id="postgresql-update-from-语法" tabindex="-1">PostgreSQL UPDATE…FROM 语法 <a class="header-anchor" href="#postgresql-update-from-语法" aria-label="Permalink to &quot;PostgreSQL UPDATE…FROM 语法&quot;">​</a></h2><p>要使用 PostgreSQL <code>UPDATE...FROM</code> 语句根据另一个表中的数据更新一个表中的数据，请遵循以下语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">UPDATE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> [IGNORE] table_name</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SET</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    column_name1 </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> value1,</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    column_name2 </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> value2,</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    ...</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> another_table[, ...]</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">WHERE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> clause</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">[RETURNING expr];</span></span></code></pre></div><p>这里，</p><ul><li>和普通的 <a href="/database/postgreSQL/base/UPDATE.html"><code>UPDATE</code></a> 语句相比，此语句多了 <code>FROM</code> 子句，并且 <code>WHERE</code> 子句是必须的。</li><li>您需要在 <code>WHERE</code> 子句中指定两个表连接的条件。</li></ul><p>比如下面的语句：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">UPDATE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> a</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SET</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> a.c1 </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> b.c2</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> b</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">WHERE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> a.b_id </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> b.id;</span></span></code></pre></div><p>对于 <code>a</code> 表的每一行，该 <code>UPDATE</code> 语句都检查 <code>b</code> 表的每一行。如果值 <code>a</code> 表的 <code>b_id</code> 列的值等于在 <code>b</code> 表的 <code>id</code> 列，该 <code>UPDATE</code> 语句将更新 <code>b</code> 的表 <code>c2</code> 列的值到 <code>a</code> 表的 <code>c1</code> 列。</p><h2 id="postgresql-update-from-实例" tabindex="-1">PostgreSQL UPDATE…FROM 实例 <a class="header-anchor" href="#postgresql-update-from-实例" aria-label="Permalink to &quot;PostgreSQL UPDATE…FROM 实例&quot;">​</a></h2><p>下面我们将通过几个实例来展示 <code>UPDATE</code> 的具体用法。</p><p>这里的实例用到了以下表：</p><ul><li><a href="/database/sakila/城市表.html"><code>city</code></a> 表中存储了城市的信息。</li><li><a href="/database/sakila/国家表.html"><code>country</code></a> 表中存储了国家的信息。</li></ul><p>假设现在有一个需求，需要更新 <code>city</code> 表中的城市名称，在其后添加 <code>@</code> 和国家名，请运行以下语句：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">UPDATE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> city_copy a</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SET</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> city </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> city </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">||</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">@</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> ||</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> b.country</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> country b</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">WHERE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> b.country_id </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 1</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> or</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> b.country_id </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 2</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">RETURNING city_id, city;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> city_id</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">                       city</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">---------+--------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">       1</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> A</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> Corua</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> (La </span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">Corua</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)@Spain</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">       2</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Abha@Saudi</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> Arabia</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">       3</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Abu</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> Dhabi@United</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> Arab</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> Emirates</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">       4</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Acua@Mexico</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">       5</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Adana@Turkey</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">       6</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Addis</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> Abeba@Ethiopia</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">       7</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Aden@Yemen</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">       8</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Adoni@India</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">       9</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Ahmadnagar@India</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">      10</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Akishima@Japan</span></span>
<span class="line"><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">      ...</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">600</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> rows</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span></span></code></pre></div><p>这里，我们在 <code>UPDATE</code> 语句中使用 <code>FROM country b</code> 子句从 <code>country</code> 表中获取满足条件 <code>a.country_id = b.country_id</code> 的行，并将该行中的 <code>country</code> 列的值应用到表达式 <code>city || &#39;@&#39; || b.country</code> 中。</p><p>您也可以使用子查询实现上面的需求，如下：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">UPDATE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> city_copy a</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SET</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> city </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> (</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">  SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> a.city </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">||</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">@</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> ||</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> b.country</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">  FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> country b</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">    WHERE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> a.country_id </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> b.country_id</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">RETURNING city_id, city;</span></span></code></pre></div><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;">​</a></h2><p>PostgreSQL <code>UPDATE...FROM</code> 语句允许您根据另一个表中的值更新表中的行。</p>`,24)])])}const o=i(t,[["render",h]]);export{c as __pageData,o as default};
