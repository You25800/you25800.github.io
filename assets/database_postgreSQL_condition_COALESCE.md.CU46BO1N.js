import{_ as a,c as s,o as e,b3 as i}from"./chunks/framework.CatkIGlB.js";const c=JSON.parse('{"title":"PostgreSQL COALESCE 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/condition/COALESCE.md","filePath":"database/postgreSQL/condition/COALESCE.md","lastUpdated":1727682257000}'),d={name:"database/postgreSQL/condition/COALESCE.md"};function l(h,t,n,r,o,p){return e(),s("div",null,[...t[0]||(t[0]=[i(`<h1 id="postgresql-coalesce-函数" tabindex="-1">PostgreSQL COALESCE 函数 <a class="header-anchor" href="#postgresql-coalesce-函数" aria-label="Permalink to &quot;PostgreSQL COALESCE 函数&quot;">​</a></h1><p>本文介绍如何使用 PostgreSQL 的 COALESCE 函数来处理空值。</p><p>PostgreSQL 的 COALESCE 函数用于返回参数列表中第一个非空值。</p><p>你可以在<code>SELECT</code>语句以及其他需要处理值的地方使用 COALESCE 函数。</p><h2 id="postgresql-coalesce-语法" tabindex="-1">PostgreSQL COALESCE 语法 <a class="header-anchor" href="#postgresql-coalesce-语法" aria-label="Permalink to &quot;PostgreSQL COALESCE 语法&quot;">​</a></h2><p>这里是 PostgreSQL COALESCE 函数的语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">COALESCE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(value1, value2, value3,...)</span></span></code></pre></div><p>解释：</p><ul><li><code>value1, value2, value3,...</code>是要检查的一系列值。</li><li>函数会从左到右依次检查这些值，直到找到第一个非空值，然后返回该值。</li><li>如果所有的值都是空值（<code>NULL</code>），则 COALESCE 函数返回<code>NULL</code>。</li></ul><h2 id="postgresql-coalesce-实例" tabindex="-1">PostgreSQL COALESCE 实例 <a class="header-anchor" href="#postgresql-coalesce-实例" aria-label="Permalink to &quot;PostgreSQL COALESCE 实例&quot;">​</a></h2><h3 id="简单示例" tabindex="-1">简单示例 <a class="header-anchor" href="#简单示例" aria-label="Permalink to &quot;简单示例&quot;">​</a></h3><p>先看一个简单的示例。</p><p>比如，你有一个表<code>employees</code>，其中包含员工的姓名<code>name</code>和奖金<code>bonus</code>字段。有些员工可能没有奖金信息，即<code>bonus</code>字段为<code>NULL</code>。你想要查询员工的姓名和奖金，如果奖金为空，则显示 0。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> name</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">COALESCE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(bonus, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">0</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">) </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">AS</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">Effective Bonus</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> employees;</span></span></code></pre></div><p>假设表中有以下数据：</p><table tabindex="0"><thead><tr><th>name</th><th>bonus</th></tr></thead><tbody><tr><td>John</td><td>1000</td></tr><tr><td>Jane</td><td>NULL</td></tr><tr><td>Tom</td><td>500</td></tr></tbody></table><p>查询结果将是：</p><table tabindex="0"><thead><tr><th>name</th><th>Effective Bonus</th></tr></thead><tbody><tr><td>John</td><td>1000</td></tr><tr><td>Jane</td><td>0</td></tr><tr><td>Tom</td><td>500</td></tr></tbody></table><h3 id="使用-coalesce-函数处理默认值" tabindex="-1">使用 COALESCE 函数处理默认值 <a class="header-anchor" href="#使用-coalesce-函数处理默认值" aria-label="Permalink to &quot;使用 COALESCE 函数处理默认值&quot;">​</a></h3><p>在另一个场景中，假设你有一个表单提交系统，用户可以填写一些可选信息。如果用户没有填写某个字段，你希望使用一个默认值。</p><p>例如，有一个表<code>user_info</code>，包含用户的年龄<code>age</code>和备注<code>remark</code>字段。如果用户没有填写备注，你希望显示“无备注”。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> age, </span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">COALESCE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(remark, </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">无备注</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">) </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">AS</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">Remark</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> user_info;</span></span></code></pre></div><p>假设表中有以下数据：</p><table tabindex="0"><thead><tr><th>age</th><th>remark</th></tr></thead><tbody><tr><td>25</td><td>工作繁忙</td></tr><tr><td>30</td><td>NULL</td></tr><tr><td>35</td><td>爱好旅游</td></tr></tbody></table><p>查询结果将是：</p><table tabindex="0"><thead><tr><th>age</th><th>Remark</th></tr></thead><tbody><tr><td>25</td><td>工作繁忙</td></tr><tr><td>30</td><td>无备注</td></tr><tr><td>35</td><td>爱好旅游</td></tr></tbody></table><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;">​</a></h2><p>在本文中，我们讨论了 PostgreSQL COALESCE 函数的语法，并提供了几个示例。COALESCE 函数在处理空值和提供默认值方面非常有用，可以使查询结果更加合理和准确。它是 PostgreSQL 中一个重要的函数，在实际应用中经常会用到。😃</p>`,28)])])}const E=a(d,[["render",l]]);export{c as __pageData,E as default};
