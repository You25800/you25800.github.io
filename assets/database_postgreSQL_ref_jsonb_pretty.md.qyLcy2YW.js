import{_ as a,c as i,o as t,b3 as e}from"./chunks/framework.CatkIGlB.js";const c=JSON.parse('{"title":"PostgreSQL jsonb_pretty() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/jsonb_pretty.md","filePath":"database/postgreSQL/ref/jsonb_pretty.md","lastUpdated":1690180485000}'),n={name:"database/postgreSQL/ref/jsonb_pretty.md"};function p(l,s,h,k,r,o){return t(),i("div",null,[...s[0]||(s[0]=[e(`<h1 id="postgresql-jsonb-pretty-函数" tabindex="-1">PostgreSQL jsonb_pretty() 函数 <a class="header-anchor" href="#postgresql-jsonb-pretty-函数" aria-label="Permalink to &quot;PostgreSQL jsonb\\_pretty() 函数&quot;">​</a></h1><p>PostgreSQL <code>jsonb_pretty()</code> 函数使用空格缩进和换行将给定的 JSONB 值转为格式化的、更易于阅读的文本。</p><h2 id="jsonb-pretty-语法" tabindex="-1"><code>jsonb_pretty()</code> 语法 <a class="header-anchor" href="#jsonb-pretty-语法" aria-label="Permalink to &quot;\`jsonb_pretty()\` 语法&quot;">​</a></h2><p>这是 PostgreSQL <code>jsonb_pretty()</code> 函数的语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">jsonb_pretty(json_value JSONB) </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> TEXT</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>json_value</code></em></p><p>必需的。 要转化的 JSONB 值。</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>jsonb_pretty()</code> 函数返回一个表示了给定的 JSONB 值的文本字符串，使用空格缩进和换行，更易于阅读。</p><p>如果您提供了一个 NULL 参数，<code>jsonb_pretty()</code> 函数将返回 NULL。</p><h2 id="jsonb-pretty-示例" tabindex="-1"><code>jsonb_pretty()</code> 示例 <a class="header-anchor" href="#jsonb-pretty-示例" aria-label="Permalink to &quot;\`jsonb_pretty()\` 示例&quot;">​</a></h2><p>下面的示例展示了如何使用 PostgreSQL <code>jsonb_pretty()</code> 函数美化输出给定的 JSON 数组。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> jsonb_pretty(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">[1, 2, 3, [4, 5]]</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> jsonb_pretty</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">--------------</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> [</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">           +</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">     1,      +</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">     2,      +</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">     3,      +</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">     [</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">       +</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">         4,  +</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">         5</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">   +</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">     ]</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">       +</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> ]</span></span></code></pre></div><p>下面的示例展示了如何使用 PostgreSQL <code>jsonb_pretty()</code> 函数美化输出给定的 JSON 对象。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> jsonb_pretty(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">{&quot;x&quot;: 1, &quot;y&quot;: &quot;a&quot;, &quot;z&quot;: [1, 2]}</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> jsonb_pretty</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">---------------</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">            +</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">     &quot;x&quot;</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">:</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> 1,</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">  +</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">     &quot;y&quot;</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">:</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">a</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">,+</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">     &quot;z&quot;</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">:</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> [   </span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">+</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">         1,</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">   +</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">         2</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">    +</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">     ]        +</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> }</span></span></code></pre></div>`,17)])])}const g=a(n,[["render",p]]);export{c as __pageData,g as default};
