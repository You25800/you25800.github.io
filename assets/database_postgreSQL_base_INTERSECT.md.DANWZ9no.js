import{_ as a,c as i,o as e,b3 as n}from"./chunks/framework.CatkIGlB.js";const o=JSON.parse('{"title":"PostgreSQL INTERSECT 用法与实例","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/base/INTERSECT.md","filePath":"database/postgreSQL/base/INTERSECT.md","lastUpdated":1690289709000}'),t={name:"database/postgreSQL/base/INTERSECT.md"};function l(p,s,h,k,r,d){return e(),i("div",null,[...s[0]||(s[0]=[n(`<h1 id="postgresql-intersect-用法与实例" tabindex="-1">PostgreSQL INTERSECT 用法与实例 <a class="header-anchor" href="#postgresql-intersect-用法与实例" aria-label="Permalink to &quot;PostgreSQL INTERSECT 用法与实例&quot;">​</a></h1><p>本文介绍了在 PostgreSQL 中如何使用 <code>INTERSECT</code> 运算符计算两个结果集的交集。</p><p>在 PostgreSQL 中， <code>INTERSECT</code> 是一个集合运算符，它返回两个集合的交集。也就是说，它返回那些同时位于两个结果集中的行。</p><p>其他的集合操作运算符还有： <a href="/database/postgreSQL/base/UNION.html"><code>UNION</code></a> 和 <a href="/database/postgreSQL/base/EXCEPT.html"><code>EXCEPT</code></a>。</p><h2 id="postgresql-intersect-语法" tabindex="-1">PostgreSQL INTERSECT 语法 <a class="header-anchor" href="#postgresql-intersect-语法" aria-label="Permalink to &quot;PostgreSQL INTERSECT 语法&quot;">​</a></h2><p>要计算两个结果集的交集，请按照以下语法使用使用 <code>INTERSECT</code> 运算符：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">SELECT_statement_1</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">INTERSECT</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">SELECT_statement_2</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">[ORDER BY ...];</span></span></code></pre></div><p>或者您可以同时计算多个结果集的交集，如下：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">SELECT_statement_1</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">INTERSECT</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">SELECT_statement_2</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">INTERSECT</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">SELECT_statement_3</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">INTERSECT</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">...</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">[ORDER BY ...];</span></span></code></pre></div><p>这里：</p><ul><li><code>SELECT_statement_N</code> 都是个独立 <code>SELECT</code> 语句。</li><li>参与 <code>INTERSECT</code> 运算的所有的结果集应该具有相同的列，并且列的数据类型和顺序应该相同。</li><li><a href="/database/postgreSQL/base/ORDER_BY.html"><code>ORDER BY</code></a> 子句用于对最终结果进行排序，它是可选的。</li></ul><h2 id="postgresql-intersect-实例" tabindex="-1">PostgreSQL INTERSECT 实例 <a class="header-anchor" href="#postgresql-intersect-实例" aria-label="Permalink to &quot;PostgreSQL INTERSECT 实例&quot;">​</a></h2><p>在本示例中，我们将使用 <a href="/database/postgreSQL_ref/返回集合的函数/generate_series.html"><code>generate_series()</code></a> 函数用来生成结果集。</p><p>我们需要用到两个结果集，先看第一个结果集：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> generate_series</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">5</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> generate_series</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">-----------------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">               1</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">               2</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">               3</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">               4</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">               5</span></span></code></pre></div><p>再看一下第二个结果集：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> generate_series</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">3</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">6</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> generate_series</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">-----------------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">               3</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">               4</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">               5</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">               6</span></span></code></pre></div><p>现在，我们对两个结果集进行 <code>INTERSECT</code> 运算：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> generate_series</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">5</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">INTERSECT</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> generate_series</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">3</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">6</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">ORDER BY</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> generate_series;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> generate_series</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">-----------------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">               3</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">               4</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">               5</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">3</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> rows</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span></span></code></pre></div><p>从结果看出，<code>INTERSECT</code> 运算符返回了第一个集合和第二个集合的共有的行。</p><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;">​</a></h2><p>在 PostgreSQL 中， <code>INTERSECT</code> 用来计算两个结果集的交集。</p>`,25)])])}const E=a(t,[["render",l]]);export{o as __pageData,E as default};
