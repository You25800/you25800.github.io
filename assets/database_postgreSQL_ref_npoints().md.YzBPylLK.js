import{_ as a,c as i,o as e,b3 as t}from"./chunks/framework.CatkIGlB.js";const k=JSON.parse('{"title":"PostgreSQL npoints() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/npoints().md","filePath":"database/postgreSQL/ref/npoints().md","lastUpdated":1690352360000}'),n={name:"database/postgreSQL/ref/npoints().md"};function p(l,s,h,o,d,r){return e(),i("div",null,[...s[0]||(s[0]=[t(`<h1 id="postgresql-npoints-函数" tabindex="-1">PostgreSQL npoints() 函数 <a class="header-anchor" href="#postgresql-npoints-函数" aria-label="Permalink to &quot;PostgreSQL npoints() 函数&quot;">​</a></h1><p>PostgreSQL <code>npoints()</code> 函数计算指定的路径或多边形上的点的数量并返回。</p><h2 id="npoints-语法" tabindex="-1"><code>npoints()</code> 语法 <a class="header-anchor" href="#npoints-语法" aria-label="Permalink to &quot;\`npoints()\` 语法&quot;">​</a></h2><p>这是 PostgreSQL <code>npoints()</code> 函数的语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">npoints(geometric_type) </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> integer</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>geometric_type</code></em></p><p>必需的。 它可以是一个 多边形 <code>polygon</code> 或一个路径 <code>path</code>。</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>npoints()</code> 函数返回通过参数指定的路径或多边形上的点的数量。</p><h2 id="npoints-示例" tabindex="-1"><code>npoints()</code> 示例 <a class="header-anchor" href="#npoints-示例" aria-label="Permalink to &quot;\`npoints()\` 示例&quot;">​</a></h2><p>下面的语句示例展示了如何使用 PostgreSQL <code>npoints()</code> 计算一个开放路径 <code>path &#39;[(2,0),(0,0)]&#39;</code> 上的点的数量。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> npoints(</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">path</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">[(2,0),(0,0)]</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> npoints</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">---------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">       2</span></span></code></pre></div><p>下面的语句示例展示了如何使用 PostgreSQL <code>npoints()</code> 计算一个闭合路径 <code>path &#39;((2,0),(0,0))&#39;</code> 上的点的数量。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> npoints(</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">path</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">((2,0),(0,0))</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> npoints</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">--------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">      2</span></span></code></pre></div><p>下面的语句示例展示了如何使用 PostgreSQL <code>npoints()</code> 计算一个多边形 <code>polygon &#39;(0,0),(2,2),(4,0)&#39;</code> 上的点的数量。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> npoints(</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">polygon</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">(0,0),(2,2),(4,0)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> npoints</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">---------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">       3</span></span></code></pre></div>`,19)])])}const g=a(n,[["render",p]]);export{k as __pageData,g as default};
