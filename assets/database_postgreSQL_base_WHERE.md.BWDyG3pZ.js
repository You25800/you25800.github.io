import{_ as i,c as a,o as e,b3 as n}from"./chunks/framework.CatkIGlB.js";const c=JSON.parse('{"title":"PostgreSQL WHERE 用法与实例","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/base/WHERE.md","filePath":"database/postgreSQL/base/WHERE.md","lastUpdated":1690289709000}'),l={name:"database/postgreSQL/base/WHERE.md"};function h(t,s,p,k,d,r){return e(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="postgresql-where-用法与实例" tabindex="-1">PostgreSQL WHERE 用法与实例 <a class="header-anchor" href="#postgresql-where-用法与实例" aria-label="Permalink to &quot;PostgreSQL WHERE 用法与实例&quot;">​</a></h1><p>本文介绍了在 PostgreSQL 中如何在 <code>SELECT</code> 语句中使用 <code>WHERE</code> 过滤返回的行。</p><p>默认情况下，<code>SELECT</code> 查询数据表中的所有行数。但是，我们可能只想查询满足一定条件的行。比如年龄是 18 的学生，成绩中等的学生等。</p><p>在 PostgreSQL 中， 要返回满足指定条件的行，请在 <a href="./select.html"><code>SELECT</code></a> 语句中使用 <code>WHERE</code> 子句。</p><p>除了 <code>SELECT</code> 语句之外，您还可以在 <a href="./UPDATE.html"><code>UPDATE</code></a> 和 <a href="./DELETE.html"><code>DELETE</code></a> 语句中使用 <code>WHERE</code> 子句来指定要更新或删除的行。</p><h2 id="postgresql-where-子句概述" tabindex="-1">PostgreSQL <code>WHERE</code> 子句概述 <a class="header-anchor" href="#postgresql-where-子句概述" aria-label="Permalink to &quot;PostgreSQL \`WHERE\` 子句概述&quot;">​</a></h2><p>要返回满足指定条件的行，请按如下语法使用 PostgreSQL 带有 <code>WHERE</code> 子句的 <code>SELECT</code> 语句：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> columns_list</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> table_name</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">WHERE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> query_condition;</span></span></code></pre></div><p>要更新满足指定条件的行，请按如下语法使用 PostgreSQL 带有 <code>WHERE</code> 子句的 <code>UPDATA</code> 语句：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">UPDATA table_name</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SET</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> column_name </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> value1, ...</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">WHERE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> query_condition;</span></span></code></pre></div><p>要删除满足指定条件的行，请按如下语法使用 PostgreSQL 带有 <code>WHERE</code> 子句的 <code>DELETE</code> 语句：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">DELETE</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> table_name</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">WHERE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> query_condition;</span></span></code></pre></div><p>在这里：</p><p><code>WHERE</code> 子句中的 <code>query_condition</code> 为布尔表达式。布尔表达式的结果必须为 <code>true</code>, <code>false</code>, 或者 <code>NULL</code>。它可以是一个布尔表达式或使用 <code>AND</code> 和 <code>OR</code> 运算符的布尔表达式的组合。</p><p><code>WHERE</code> 子句使用 <code>query_condition</code> 来过滤表中的行:</p><ul><li>只有导致 <code>query_condition</code> 评估为真的行才会包含在 <code>SELECT</code> 语句返回的结果集中。</li><li>只有导致 <code>query_condition</code> 评估为真的行才会被 <code>UPDATE</code> 语句更新。</li><li>只有导致 <code>query_condition</code> 评估为真的行才会被 <code>DELETE</code> 语句删除。</li></ul><h2 id="postgresql-where-子句示例" tabindex="-1">PostgreSQL <code>WHERE</code> 子句示例 <a class="header-anchor" href="#postgresql-where-子句示例" aria-label="Permalink to &quot;PostgreSQL \`WHERE\` 子句示例&quot;">​</a></h2><p>下面我们提供了一些实用的例子来展示 <code>WHERE</code> 子句的威力。</p><p>我们将使用 <a href="/database/sakila/">PostgreSQL Sakila 示例数据库</a>中的 <a href="/database/sakila/客户表.html"><code>customer</code> 表</a>进行演示这些实例。</p><h3 id="将-where-子句与等号-运算符一起使用的示例" tabindex="-1">将 WHERE 子句与等号 (<code>=</code>) 运算符一起使用的示例 <a class="header-anchor" href="#将-where-子句与等号-运算符一起使用的示例" aria-label="Permalink to &quot;将 WHERE 子句与等号 (\`=\`) 运算符一起使用的示例&quot;">​</a></h3><p>以下语句使用 <code>WHERE</code> 子句查找名字为 <code>JAMIE</code> 的客户：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> last_name,</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  first_name</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> customer</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">WHERE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> first_name </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">JAMIE</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> last_name</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> first_name</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">-----------+------------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> RICE</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">      |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> JAMIE</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> WAUGH</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">     |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> JAMIE</span></span></code></pre></div><h3 id="在-where-子句中使用-and-运算符" tabindex="-1">在 <code>WHERE</code> 子句中使用 <code>AND</code> 运算符 <a class="header-anchor" href="#在-where-子句中使用-and-运算符" aria-label="Permalink to &quot;在 \`WHERE\` 子句中使用 \`AND\` 运算符&quot;">​</a></h3><p>以下示例通过使用逻辑运算符 <code>AND</code> 组合两个布尔表达式来查找名字和姓氏为 <code>JAMIE</code> 和 <code>RICE</code> 的客户：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> last_name,</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  first_name</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> customer</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">WHERE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> first_name </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">JAMIE</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">  AND</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> last_name </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">RICE</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> last_name</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> first_name</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">-----------+------------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> RICE</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">      |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> JAMIE</span></span></code></pre></div><h3 id="在-where-子句中使用-or-运算符" tabindex="-1">在 <code>WHERE</code> 子句中使用 <code>OR</code> 运算符 <a class="header-anchor" href="#在-where-子句中使用-or-运算符" aria-label="Permalink to &quot;在 \`WHERE\` 子句中使用 \`OR\` 运算符&quot;">​</a></h3><p>此示例使用 <code>OR</code> 运算符查找姓氏为 <code>RODRIGUEZ</code> 或名字为 <code>ADAM</code> 的客户：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> first_name,</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  last_name</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> customer</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">WHERE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> last_name </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">RODRIGUEZ</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">  OR</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> first_name </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">ADAM</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> first_name</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> last_name</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">------------+-----------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> LAURA</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">      |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> RODRIGUEZ</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ADAM</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">       |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> GOOCH</span></span></code></pre></div><h3 id="在-where-子句中使用-in-运算符" tabindex="-1">在 <code>WHERE</code> 子句中使用 <code>IN</code> 运算符 <a class="header-anchor" href="#在-where-子句中使用-in-运算符" aria-label="Permalink to &quot;在 \`WHERE\` 子句中使用 \`IN\` 运算符&quot;">​</a></h3><p>如果要将字符串与一个列表中的任何字符串匹配，可以使用 <a href="./IN.html"><code>IN</code></a> 运算符。</p><p>例如，以下语句返回名字为 <code>ANN</code>, <code>ANNE</code>, 或 <code>ANNIE</code> 的客户：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> first_name,</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  last_name</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> customer</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">WHERE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> first_name </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">IN</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> (</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">ANN</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">ANNE</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">ANNIE</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> first_name</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> last_name</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">------------+-----------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ANN</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">        |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> EVANS</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ANNE</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">       |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> POWELL</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ANNIE</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">      |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> RUSSELL</span></span></code></pre></div><h3 id="在-where-子句中使用-like-运算符" tabindex="-1">在 <code>WHERE</code> 子句中使用 <code>LIKE</code> 运算符 <a class="header-anchor" href="#在-where-子句中使用-like-运算符" aria-label="Permalink to &quot;在 \`WHERE\` 子句中使用 \`LIKE\` 运算符&quot;">​</a></h3><p>要查找与指定模式匹配的字符串，请使用 <a href="./LIKE.html"><code>LIKE</code></a> 运算符。以下示例返回名字以字符串 <code>ANN</code> 开头的所有客户：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> first_name,</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  last_name</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> customer</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">WHERE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> first_name </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">LIKE</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">ANN%</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> first_name</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> last_name</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">------------+-----------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ANNA</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">       |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> HILL</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ANN</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">        |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> EVANS</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ANNE</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">       |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> POWELL</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ANNIE</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">      |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> RUSSELL</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ANNETTE</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> OLSON</span></span></code></pre></div><p>这里，通配符 <code>%</code> 可以匹配任意长度的任意字符。 模式 <code>&#39;ANN%&#39;</code> 模式匹配以 <code>&#39;ANN&#39;</code> 开头的任何字符串。</p><h3 id="在-where-子句中使用-between-运算符" tabindex="-1">在 <code>WHERE</code> 子句中使用 <code>BETWEEN</code> 运算符 <a class="header-anchor" href="#在-where-子句中使用-between-运算符" aria-label="Permalink to &quot;在 \`WHERE\` 子句中使用 \`BETWEEN\` 运算符&quot;">​</a></h3><p>以下示例使用 <a href="./BETWEEN.html"><code>BETWEEN</code></a> 运算符查找名字以字母 <code>A</code> 开头并包含 3 到 5 个字符的客户。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> first_name,</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">  LENGTH</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(first_name) name_length</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> customer</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">WHERE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> first_name </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">LIKE</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">A%</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">  AND</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> LENGTH</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(first_name) </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">BETWEEN</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 3</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> AND</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 5</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">ORDER BY</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> name_length;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> first_name</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> name_length</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">------------+-------------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> AMY</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">        |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           3</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ANN</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">        |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           3</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ANA</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">        |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           3</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ANDY</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">       |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           4</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ANNA</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">       |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           4</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ANNE</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">       |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           4</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ALMA</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">       |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           4</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ADAM</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">       |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           4</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ALAN</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">       |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           4</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ALEX</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">       |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           4</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ANGEL</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">      |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           5</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> AGNES</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">      |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           5</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ANDRE</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">      |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           5</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> AARON</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">      |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           5</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ALLAN</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">      |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           5</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ALLEN</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">      |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           5</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ALICE</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">      |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           5</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ALVIN</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">      |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           5</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ANITA</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">      |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           5</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> AMBER</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">      |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           5</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> APRIL</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">      |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           5</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ANNIE</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">      |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">           5</span></span></code></pre></div><p>在这个例子中，我们使用了获取输入字符串的字符数的 <a href="/postgresql-ref/LENGTH.html"><code>LENGTH()</code></a> 函数。</p><h3 id="在-where-子句中使用不等运算符-运算符" tabindex="-1">在 <code>WHERE</code> 子句中使用不等运算符 (<code>&lt;&gt;</code>)运算符 <a class="header-anchor" href="#在-where-子句中使用不等运算符-运算符" aria-label="Permalink to &quot;在 \`WHERE\` 子句中使用不等运算符 (\`&lt;&gt;\`)运算符&quot;">​</a></h3><p>此示例查找名字以 <code>BRA</code> 开头而姓氏不以 <code>MOTLEY</code> 开头的客户：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> first_name,</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  last_name</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> customer</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">WHERE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> first_name </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">LIKE</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">BRA%</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">  AND</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> last_name </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&lt;&gt;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">MOTLEY</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> first_name</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> last_name</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">------------+-----------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> BRANDY</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">     |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> GRAVES</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> BRANDON</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> HUEY</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> BRAD</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">       |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> MCCURDY</span></span></code></pre></div><p>您可以使用 <code>!=</code> 运算符代替 <code>&lt;&gt;</code> 运算符，因为它们是等效的。</p><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;">​</a></h2><p>本文向您介绍了 <code>WHERE</code> 子句的作用，以及如何在 PostgreSQL <code>SELECT</code> 语句中使用 <code>WHERE</code> 子句根据指定条件过滤行。</p><p>以下是一些可以在 <code>WHERE</code> 子句中使用的运算符：</p><ul><li><code>=</code> : 相等</li><li><code>&gt;</code> : 大于</li><li><code>&lt;</code> : 小于</li><li><code>&gt;=</code> : 大于或等于</li><li><code>&lt;=</code> : 小于或等于</li><li><code>&lt;&gt;</code> : 不相等</li><li><code>!=</code> : 不相等，等同于 <code>&lt;&gt;</code></li><li><code>AND</code> : 逻辑与运算符</li><li><code>OR</code> : 逻辑或运算符</li><li><a href="./IN.html"><code>IN</code></a> : 如果值与列表中的任何值匹配，则返回 true</li><li><a href="./BETWEEN.html"><code>BETWEEN</code></a> : 如果一个值在一个值范围之间，则返回 true</li><li><a href="./LIKE.html"><code>LIKE</code></a> : 如果值与模式匹配，则返回 true</li><li><a href="./IS_NULL.html"><code>IS NULL</code></a> : 如果值为 NULL，则返回 true</li><li><code>NOT</code> : 否定其他运算符的结果</li></ul>`,55)])])}const F=i(l,[["render",h]]);export{c as __pageData,F as default};
