import{_ as s,c as a,o as e,b3 as t}from"./chunks/framework.CatkIGlB.js";const m=JSON.parse('{"title":"PostgreSQL make_time() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/make_time.md","filePath":"database/postgreSQL/ref/make_time.md","lastUpdated":1690159250000}'),l={name:"database/postgreSQL/ref/make_time.md"};function h(n,i,p,k,d,r){return e(),a("div",null,[...i[0]||(i[0]=[t('<h1 id="postgresql-make-time-函数" tabindex="-1">PostgreSQL make_time() 函数 <a class="header-anchor" href="#postgresql-make-time-函数" aria-label="Permalink to &quot;PostgreSQL make\\_time() 函数&quot;">​</a></h1><p>PostgreSQL <code>make_time()</code> 函数从给定的时、分、秒字段创建一个时间。</p><h2 id="make-time-语法" tabindex="-1"><code>make_time()</code> 语法 <a class="header-anchor" href="#make-time-语法" aria-label="Permalink to &quot;`make_time()` 语法&quot;">​</a></h2><p>这是 PostgreSQL <code>make_time()</code> 函数的语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">make_time(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">hour</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> INT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">minute</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> INT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">second</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> DOUBLE PRECISION</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">) </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> TIME</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>hour</code></em></p><p>必需的。 一个指示小时的整数。</p></li><li><p><em><code>minute</code></em></p><p>必需的。 一个指示分钟的整数。</p></li><li><p><em><code>second</code></em></p><p>必需的。 一个指示秒的双精度浮点数。</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>make_time()</code> 函数返回一个时间值，它由给定的时、分、秒字段创建而来。</p><h2 id="make-time-示例" tabindex="-1"><code>make_time()</code> 示例 <a class="header-anchor" href="#make-time-示例" aria-label="Permalink to &quot;`make_time()` 示例&quot;">​</a></h2><p>这个示例展示了 <code>make_time()</code> 函数的基本用法。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> make_time(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">20</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">55</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">25</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">.</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">517606</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    make_time</span></span>\n<span class="line"><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">-----------------</span></span>\n<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 20</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">:</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">55</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">:</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">25</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">.</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">517606</span></span></code></pre></div>',13)])])}const c=s(l,[["render",h]]);export{m as __pageData,c as default};
