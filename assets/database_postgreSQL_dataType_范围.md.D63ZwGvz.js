import{_ as a,c as e,o as i,b3 as t}from"./chunks/framework.CatkIGlB.js";const k=JSON.parse('{"title":"PostgreSQL 范围 (Range) 数据类型介绍","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/dataType/范围.md","filePath":"database/postgreSQL/dataType/范围.md","lastUpdated":1689663255000}'),l={name:"database/postgreSQL/dataType/范围.md"};function n(p,s,d,h,o,r){return i(),e("div",null,[...s[0]||(s[0]=[t(`<h1 id="postgresql-范围-range-数据类型介绍" tabindex="-1">PostgreSQL 范围 (Range) 数据类型介绍 <a class="header-anchor" href="#postgresql-范围-range-数据类型介绍" aria-label="Permalink to &quot;PostgreSQL 范围 (Range) 数据类型介绍&quot;">​</a></h1><p>本文介绍 PostgreSQL 范围数据类型和它的用法。</p><h2 id="postgresql-范围类型介绍" tabindex="-1">PostgreSQL 范围类型介绍 <a class="header-anchor" href="#postgresql-范围类型介绍" aria-label="Permalink to &quot;PostgreSQL 范围类型介绍&quot;">​</a></h2><p>在 PostgreSQL 中，范围 (Range) 是表示某些元素类型的值的区间的数据类型。比如 一个整数的范围可以表示一组人的年龄的范围， 以及一个时间的范围可以表示一个会议室被保留的时间段。</p><p>范围值是一个区间值，使用 <code>[</code>, <code>]</code>, <code>(</code>, <code>)</code> 表示：</p><ul><li><code>[</code> 表示范围的开始，包含起始值。</li><li><code>]</code> 表示范围的结束，包含结束值。</li><li><code>(</code> 表示范围的开始，不包含起始值。</li><li><code>)</code> 表示范围的结束，不包含结束值。</li></ul><p>下面是几个范围的示例：</p><ul><li><code>[a,b]</code> - <code>a</code> 和 <code>b</code> 之间的值，包含 <code>a</code> 和 <code>b</code>。</li><li><code>(a,b)</code> - <code>a</code> 和 <code>b</code> 之间的值，不包含 <code>a</code> 和 <code>b</code>。</li><li><code>[a,b)</code> - <code>a</code> 和 <code>b</code> 之间的值，包含 <code>a</code>，不包含 <code>b</code>。</li><li><code>(a,b]</code> - <code>a</code> 和 <code>b</code> 之间的值，不包含 <code>a</code>，包含 <code>b</code>。</li><li><code>[a,)</code> - <code>a</code> 和 大于 <code>a</code> 的值。</li><li><code>(a,)</code> - 大于 <code>a</code> 的值。</li><li><code>(,b]</code> - <code>b</code> 和 小于 <code>b</code> 的值。</li><li><code>(,b)</code> - 小于 <code>b</code> 的值。</li></ul><p>PostgreSQL 14 引入了 Multirange 类型，它是 Range 类型的集合。表示方法为： <code>{ range_1, range_2, ...}</code>。</p><p>每一个 Range 类型都有其对应的 Multirange 类型。</p><h2 id="postgresql-内置的-range-类型" tabindex="-1">PostgreSQL 内置的 Range 类型 <a class="header-anchor" href="#postgresql-内置的-range-类型" aria-label="Permalink to &quot;PostgreSQL 内置的 Range 类型&quot;">​</a></h2><p>下表展示了 PostgreSQL 内置的范围类型：</p><table tabindex="0"><thead><tr><th>Range</th><th>说明</th><th>Multirange</th></tr></thead><tbody><tr><td><code>int4range</code></td><td><code>integer</code>的范围</td><td><code>int4multirange</code></td></tr><tr><td><code>int8range</code></td><td><code>bigint</code> 的范围</td><td><code>int8multirange</code></td></tr><tr><td><code>numrange</code></td><td><code>numeric</code> 的范围</td><td><code>nummultirange</code></td></tr><tr><td><code>tsrange</code></td><td><code>timestamp without time zone</code> 的范围</td><td><code>tsmultirange</code></td></tr><tr><td><code>tstzrange</code></td><td><code>timestamp with time zone</code> 的范围</td><td><code>tstzmultirange</code></td></tr><tr><td><code>daterange</code></td><td><code>date</code>的范围</td><td><code>datemultirange</code></td></tr></tbody></table><h2 id="postgresql-range-运算符和函数" tabindex="-1">PostgreSQL Range 运算符和函数 <a class="header-anchor" href="#postgresql-range-运算符和函数" aria-label="Permalink to &quot;PostgreSQL Range 运算符和函数&quot;">​</a></h2><p>下表展示了 PostgreSQL 一些用于范围类型的运算符：</p><p>| 运算符 | 说明 | | ------ | ------------------------------------------------------------ | ------------------------ | | <code>@&gt;</code> | 检查第一个操作数（范围）是否包含第二个操作数（范围或者元素） | | <code>&lt;@</code> | 检查第二个操作数（范围）是否包含第一个操作数（范围或者元素） | | <code>&amp;&amp;</code> | 检查两个范围是否有重合的部分 | | <code>&lt;&lt;</code> | 检查第一个范围是否在第二个范围的左侧 | | <code>&gt;&gt;</code> | 检查第一个范围是否在第二个范围的右侧 | | <code>&amp;&lt;</code> | 检查第一个范围是否延伸到第二个范围的右侧 | | <code>&amp;&gt;</code> | 检查第一个范围是否延伸到第二个范围的左侧 | | <code>- | -</code> | 检查两个范围是否是相邻的 | | <code>+</code> | 计算两个范围的合集 | | <code>*</code> | 计算两个范围的交集 | | <code>-</code> | 计算两个范围的差集 |</p><p>这些操作数同样适合 Multirange 类型的数据。</p><p>同时， PostgreSQL 为 Range 和 Multirange 数据类型提供了许多有用的<a href="/database/postgreSQL_ref/range-functions.html">函数</a>，如下：</p><ul><li><a href="/database/postgreSQL_ref/isempty.html"><code>isempty()</code></a> 函数检查一个给定的范围值是否为空。</li><li><a href="/database/postgreSQL_ref/lower_inc.html"><code>lower_inc()</code></a> 函数检查一个给定范围的下限是否是包含在内的。</li><li><a href="/database/postgreSQL_ref/lower_inf.html"><code>lower_inf()</code></a> 函数检查一个给定范围的下限是否是无限。</li><li><a href="/database/postgreSQL_ref/lower-range.html"><code>lower()</code></a> 函数返回一个给定范围或者多值范围的下限值。</li><li><a href="/database/postgreSQL_ref/multirange.html"><code>multirange()</code></a> 函数返回一个包含了给定范围的多值范围。</li><li><a href="/database/postgreSQL_ref/range_merge.html"><code>range_merge()</code></a> 函数计算包含了所有范围或者整个多值范围的最小范围。</li><li><a href="/database/postgreSQL_ref/unnest-range.html"><code>unnest()</code></a> 函数将一个多值范围值展开为范围值的集合。</li><li><a href="/database/postgreSQL_ref/upper_inc.html"><code>upper_inc()</code></a> 函数检查一个给定范围的上限是否是包含在内的。</li><li><a href="/database/postgreSQL_ref/upper_inf.html"><code>upper_inf()</code></a> 函数检查一个给定范围的上限是否是无限。</li><li><a href="/database/postgreSQL_ref/upper-range.html"><code>upper()</code></a> 函数返回一个给定范围或者多值范围的上限。</li></ul><h2 id="postgresql-range-实例" tabindex="-1">PostgreSQL Range 实例 <a class="header-anchor" href="#postgresql-range-实例" aria-label="Permalink to &quot;PostgreSQL Range 实例&quot;">​</a></h2><p>下面是一些 PostgreSQL Range 和 Multirange 的实例。</p><p>要检查一个范围是否包含另一个范围，请使用以下语句：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">[1,9]</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">::int4range @</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">[3,9]</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">::int4range;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ?column?</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">----------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> t</span></span></code></pre></div><p>要检查一个范围是否包含一个值，请使用以下语句：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">[1,9]</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">::int4range @</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 3</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ?column?</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">----------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> t</span></span></code></pre></div><p>要检查一个 Multirange 值是否包含一个范围值，请使用以下语句：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">{[1,5], [7, 9]}</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">::int4multirange @</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">[3,4]</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">::int4range;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ?column?</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">----------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> t</span></span></code></pre></div><h2 id="postgresql-自定义范围" tabindex="-1">PostgreSQL 自定义范围 <a class="header-anchor" href="#postgresql-自定义范围" aria-label="Permalink to &quot;PostgreSQL 自定义范围&quot;">​</a></h2><p>除了使用 PostgreSQL 内置的范围类型，您还可以使用 <a href="/database/postgreSQL/dataType/用户自定义类型.html"><code>CREATE TYPE</code> 语句</a>创建自己的范围类型。</p><p>这是创建自定义范围类型的语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> TYPE</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> name</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> AS</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> RANGE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> (</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    SUBTYPE </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> subtype</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    [ , SUBTYPE_OPCLASS = subtype_operator_class ]</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    [ , COLLATION = collation ]</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    [ , CANONICAL = canonical_function ]</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    [ , SUBTYPE_DIFF = subtype_diff_function ]</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    [ , MULTIRANGE_TYPE_NAME = multirange_type_name ]</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span></code></pre></div><p>假设，您要创建一个时间 (<a href="./TIME.html"><code>time</code></a>) 的范围类型 <code>my_time_range</code>，请使用以下语句：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> TYPE</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> my_time_range</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> AS</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> RANGE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> (</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    SUBTYPE </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> time</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><p>下面的语句使用了刚刚创建的范围类型 <code>my_time_range</code>：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> my_time_range(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">10:00:00</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">,</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">12:00:00</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">) @</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">11:00:00</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">::</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">time</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> ?column?</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">----------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> t</span></span></code></pre></div><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;">​</a></h2><p>在 PostgreSQL 中，范围 (Range) 是表示某些元素类型的值的区间的数据类型。Multirange 类型是 Range 类型的集合。</p>`,41)])])}const g=a(l,[["render",n]]);export{k as __pageData,g as default};
