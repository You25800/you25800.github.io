import{_ as e,c as a,o as i,b3 as t}from"./chunks/framework.CatkIGlB.js";const c=JSON.parse('{"title":"PostgreSQL pg_sleep_until() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/pg_sleep_until.md","filePath":"database/postgreSQL/ref/pg_sleep_until.md","lastUpdated":1690159250000}'),l={name:"database/postgreSQL/ref/pg_sleep_until.md"};function p(n,s,h,k,d,r){return i(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="postgresql-pg-sleep-until-函数" tabindex="-1">PostgreSQL pg_sleep_until() 函数 <a class="header-anchor" href="#postgresql-pg-sleep-until-函数" aria-label="Permalink to &quot;PostgreSQL pg\\_sleep\\_until() 函数&quot;">​</a></h1><p>PostgreSQL <code>pg_sleep_until()</code> 函数接收一个时间戳值，将当前服务器进程的执行暂停（睡眠）到这个指定的时刻。</p><h2 id="pg-sleep-until-语法" tabindex="-1"><code>pg_sleep_until()</code> 语法 <a class="header-anchor" href="#pg-sleep-until-语法" aria-label="Permalink to &quot;\`pg_sleep_until()\` 语法&quot;">​</a></h2><p>这里是 PostgreSQL <code>pg_sleep_until()</code> 函数的语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">pg_sleep_until(sleep_to </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">TIMESTAMP WITH TIME ZONE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>sleep_to</code></em></p><p>必需的。它指示了当前服务器进程的何时停止睡眠。</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>pg_sleep_until()</code> 函数没有返回值，将当前服务器进程的执行暂停（睡眠）到这个指定的时刻。</p><h2 id="pg-sleep-until-示例" tabindex="-1"><code>pg_sleep_until()</code> 示例 <a class="header-anchor" href="#pg-sleep-until-示例" aria-label="Permalink to &quot;\`pg_sleep_until()\` 示例&quot;">​</a></h2><p>这里结合 <a href="./clock_timestamp.html"><code>clock_timestamp()</code></a> 函数展示了 <code>pg_sleep_until()</code> 的能力。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    clock_timestamp</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">()</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">,</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    pg_sleep_until(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">2022-05-20 11:35:50+08</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">),</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    clock_timestamp</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">()</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">-[</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> RECORD</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 1</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> ]---+------------------------------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">clock_timestamp</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 2022-05-20</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> 11:35:41.080176+08</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">pg_sleep_until</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">  |</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">clock_timestamp</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 2022-05-20</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> 11:35:50.013833+08</span></span></code></pre></div><p>这里，我们使用 <code>pg_sleep_until()</code> 函数将服务器进程的执行暂停到 2022-05-20 11:35:50+08，随后 第二个 <code>clock_timestamp()</code> 函数返回了当前的时间。</p>`,14)])])}const g=e(l,[["render",p]]);export{c as __pageData,g as default};
