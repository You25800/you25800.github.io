import{_ as i,c as a,o as t,b3 as e}from"./chunks/framework.CatkIGlB.js";const c=JSON.parse('{"title":"PostgreSQL transaction_timestamp() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/transaction_timestamp.md","filePath":"database/postgreSQL/ref/transaction_timestamp.md","lastUpdated":1690159250000}'),n={name:"database/postgreSQL/ref/transaction_timestamp.md"};function p(h,s,l,k,r,d){return t(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="postgresql-transaction-timestamp-函数" tabindex="-1">PostgreSQL transaction_timestamp() 函数 <a class="header-anchor" href="#postgresql-transaction-timestamp-函数" aria-label="Permalink to &quot;PostgreSQL transaction\\_timestamp() 函数&quot;">​</a></h1><p>PostgreSQL <code>transaction_timestamp()</code> 函数返回所属的事务开始时的系统日期和时间。</p><p>PostgreSQL <code>transaction_timestamp()</code> 函数等同于 <a href="./transaction_timestamp.html"><code>now()</code></a> 和 <a href="./current_timestamp.html"><code>current_timestamp()</code></a> 函数。</p><h2 id="transaction-timestamp-语法" tabindex="-1"><code>transaction_timestamp()</code> 语法 <a class="header-anchor" href="#transaction-timestamp-语法" aria-label="Permalink to &quot;\`transaction_timestamp()\` 语法&quot;">​</a></h2><p>这是 PostgreSQL <code>transaction_timestamp()</code> 函数的语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">transaction_timestamp</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">()</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> -&gt;</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> timestamp</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><p>PostgreSQL <code>transaction_timestamp()</code> 函数无需任何参数。</p><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>transaction_timestamp()</code> 函数返回一个带有时区信息的日期和时间，它是该函数所属的事务开始时的系统日期和时间。</p><p>也就是说同一个语句中的 <code>transaction_timestamp()</code> 函数返回值相同，这与 <a href="./clock_timestamp.html"><code>clock_timestamp()</code></a> 不同。</p><h2 id="transaction-timestamp-示例" tabindex="-1"><code>transaction_timestamp()</code> 示例 <a class="header-anchor" href="#transaction-timestamp-示例" aria-label="Permalink to &quot;\`transaction_timestamp()\` 示例&quot;">​</a></h2><p>本示例展示了如何使用 PostgreSQL <code>transaction_timestamp()</code> 函数获取当前的日期和时间。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> transaction_timestamp</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">()</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">;</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">     transaction_timestamp</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">-------------------------------</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 2022</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">05</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">15</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 22</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">:</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">17</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">:</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">34</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">.</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">819513</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">+</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">03</span></span></code></pre></div><p><code>transaction_timestamp()</code> 函数返回的是所属的事务开始的时间，而不是函数执行时刻的时间。请看下面的示例：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    transaction_timestamp</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">()</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">,</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    pg_sleep(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">),</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    transaction_timestamp</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">()</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">;</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">[ RECORD 1 ]</span><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">---------------------------</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">transaction_timestamp      | </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">2022</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">05</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">15</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 22</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">:</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">18</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">:</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">31</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">.</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">076406</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">+</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">03</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">pg_sleep |</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">transaction_timestamp      | </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">2022</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">05</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">15</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 22</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">:</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">18</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">:</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">31</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">.</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">076406</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">+</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">03</span></span></code></pre></div><p>这里，即使我们在两个 <code>transaction_timestamp()</code> 函数使用了 <a href="./pg_sleep.html"><code>pg_sleep(1)</code></a> 将执行暂停了 1 秒，两个 <code>transaction_timestamp()</code> 函数返回的时间仍然是相同的。</p>`,19)])])}const m=i(n,[["render",p]]);export{c as __pageData,m as default};
