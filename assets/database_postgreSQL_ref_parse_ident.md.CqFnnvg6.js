import{_ as s,c as a,o as i,b3 as t}from"./chunks/framework.CatkIGlB.js";const k=JSON.parse('{"title":"PostgreSQL parse_ident() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/parse_ident.md","filePath":"database/postgreSQL/ref/parse_ident.md","lastUpdated":1689843090000}'),l={name:"database/postgreSQL/ref/parse_ident.md"};function p(n,e,h,d,o,r){return i(),a("div",null,[...e[0]||(e[0]=[t(`<h1 id="postgresql-parse-ident-函数" tabindex="-1">PostgreSQL parse_ident() 函数 <a class="header-anchor" href="#postgresql-parse-ident-函数" aria-label="Permalink to &quot;PostgreSQL parse\\_ident() 函数&quot;">​</a></h1><p>PostgreSQL <code>parse_ident()</code> 函数将参数拆分成一个标识符的数组，同时删除单个标识符两端的引号。如果启用了严格模式，最后一个标识符之后的其他字符将会导致一个错误。如果未启用严格模式，<code>parse_ident()</code> 将会忽略额外的字符。</p><h2 id="parse-ident-语法" tabindex="-1"><code>parse_ident()</code> 语法 <a class="header-anchor" href="#parse-ident-语法" aria-label="Permalink to &quot;\`parse_ident()\` 语法&quot;">​</a></h2><p>这是 PostgreSQL <code>parse_ident()</code> 函数的语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">parse_ident (qualified_identifier)</span></span></code></pre></div><p>或者</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">parse_ident (qualified_identifier, strict_mode)</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>qualified_identifier</code></em></p><p>必需的。 文本类型。 一个合格的标识符。</p></li><li><p><em><code>strict_mode</code></em></p><p>可选的。 布尔类型。 是否启用严格模式。默认是 <code>true</code>.</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>parse_ident()</code> 函数返回一个数组，其中包含了从 <code>qualified_identifier</code> 拆分而来的所有标识符。</p><p>以下情况将会导致一个错误：</p><ul><li><code>qualified_identifier</code> 不是以一个有效的标识符开头会导致一个错误。</li><li>严格模式下，最后一个标识符之后的其他字符将会导致一个错误。</li></ul><p>若参数为 <code>NULL</code>，该函数将返回 <code>NULL</code>。</p><h2 id="parse-ident-示例" tabindex="-1"><code>parse_ident()</code> 示例 <a class="header-anchor" href="#parse-ident-示例" aria-label="Permalink to &quot;\`parse_ident()\` 示例&quot;">​</a></h2><h3 id="基本用法" tabindex="-1">基本用法 <a class="header-anchor" href="#基本用法" aria-label="Permalink to &quot;基本用法&quot;">​</a></h3><p>这个示例说明了如果使用 <code>parse_ident()</code> 函数拆分合格的标识符。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> parse_ident(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">&quot;SomeSchema&quot;.someTable</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">      parse_ident</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">------------------------</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> {</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">SomeSchema,sometable}</span></span></code></pre></div><p>如果单独的标识符两端的引号不能去掉，则引号会被保留：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> parse_ident(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">&quot;SomeSchema&quot;.&quot;some Table&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">        parse_ident</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">---------------------------</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> {</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">SomeSchema,</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">&quot;some Table&quot;</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">}</span></span></code></pre></div><h3 id="严格模式" tabindex="-1">严格模式 <a class="header-anchor" href="#严格模式" aria-label="Permalink to &quot;严格模式&quot;">​</a></h3><p>默认情况下，<code>parse_ident()</code> 使用严格模式，也就是说，您必须使用一个合格的标识符作为参数，否则会发生错误。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> parse_ident(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">&quot;SomeSchema&quot;.&quot;someTable&quot;Error</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><p>这里会产生一个错误： ”错误: 字符串不是一个合法的标识符：““SomeSchema”.“someTable&quot;Error”“。</p><p>如果不使用严格模式，<code>parse_ident()</code> 会忽略调最后的错误字符。我们可以传入 <code>strict_mode</code> 参数设置为 <code>false</code> 来禁用严格模式。如下：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> parse_ident(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">&quot;SomeSchema&quot;.&quot;someTable&quot;Error</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, false);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">      parse_ident</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">------------------------</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> {</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">SomeSchema,someTable}</span></span></code></pre></div>`,29)])])}const m=s(l,[["render",p]]);export{k as __pageData,m as default};
