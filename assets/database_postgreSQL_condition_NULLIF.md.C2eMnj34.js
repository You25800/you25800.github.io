import{_ as t,c as i,o as a,b3 as e}from"./chunks/framework.CatkIGlB.js";const c=JSON.parse('{"title":"PostgreSQL NULLIF 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/condition/NULLIF.md","filePath":"database/postgreSQL/condition/NULLIF.md","lastUpdated":1727682257000}'),d={name:"database/postgreSQL/condition/NULLIF.md"};function l(n,s,h,r,p,o){return a(),i("div",null,[...s[0]||(s[0]=[e(`<h1 id="postgresql-nullif-函数" tabindex="-1">PostgreSQL NULLIF 函数 <a class="header-anchor" href="#postgresql-nullif-函数" aria-label="Permalink to &quot;PostgreSQL NULLIF 函数&quot;">​</a></h1><p>本文介绍如何使用 PostgreSQL 的 NULLIF 函数来比较两个值并在特定情况下返回 NULL。</p><p>PostgreSQL 的 NULLIF 函数用于比较两个表达式，如果它们相等，则返回 NULL，否则返回第一个表达式的值。</p><p>你可以在 <code>SELECT</code> 语句以及其他需要进行条件判断的地方使用 NULLIF 函数。</p><h2 id="postgresql-nullif-语法" tabindex="-1">PostgreSQL NULLIF 语法 <a class="header-anchor" href="#postgresql-nullif-语法" aria-label="Permalink to &quot;PostgreSQL NULLIF 语法&quot;">​</a></h2><p>这里是 PostgreSQL NULLIF 函数的语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">NULLIF</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(arg1, arg2)</span></span></code></pre></div><p>解释：</p><ul><li><code>arg1</code> 和 <code>arg2</code> 是要进行比较的两个表达式。</li><li>如果 <code>arg1</code> 和 <code>arg2</code> 相等，则 NULLIF 函数返回 NULL。</li><li>如果 <code>arg1</code> 和 <code>arg2</code> 不相等，则返回 <code>arg1</code> 的值。</li></ul><h2 id="postgresql-nullif-实例" tabindex="-1">PostgreSQL NULLIF 实例 <a class="header-anchor" href="#postgresql-nullif-实例" aria-label="Permalink to &quot;PostgreSQL NULLIF 实例&quot;">​</a></h2><h3 id="简单示例" tabindex="-1">简单示例 <a class="header-anchor" href="#简单示例" aria-label="Permalink to &quot;简单示例&quot;">​</a></h3><p>先看一个简单的示例。</p><p>比如，你有一个表 <code>products</code>，其中包含产品的原价 <code>original_price</code> 和折扣价 <code>discounted_price</code> 字段。你想要计算折扣率，但如果原价和折扣价相等，说明没有折扣，此时应返回 NULL。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> original_price, discounted_price,</span></span>
<span class="line"><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">       NULLIF</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(original_price </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> discounted_price, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">0</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">) </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">AS</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> discount_amount,</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">       CASE</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> WHEN</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> NULLIF</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(original_price </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> discounted_price, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">0</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">) </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">IS</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> NULL</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> THEN</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> NULL</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">            ELSE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> ((original_price </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> discounted_price) </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">/</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> original_price) </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 100</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> END</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> AS</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> discount_percentage</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> products;</span></span></code></pre></div><p>假设表中有以下数据：</p><table tabindex="0"><thead><tr><th>original_price</th><th>discounted_price</th></tr></thead><tbody><tr><td>100</td><td>80</td></tr><tr><td>50</td><td>50</td></tr><tr><td>120</td><td>100</td></tr></tbody></table><p>查询结果将是：</p><table tabindex="0"><thead><tr><th>original_price</th><th>discounted_price</th><th>discount_amount</th><th>discount_percentage</th></tr></thead><tbody><tr><td>100</td><td>80</td><td>20</td><td>20.00</td></tr><tr><td>50</td><td>50</td><td>NULL</td><td>NULL</td></tr><tr><td>120</td><td>100</td><td>20</td><td>16.67</td></tr></tbody></table><h3 id="使用-nullif-函数进行条件判断" tabindex="-1">使用 NULLIF 函数进行条件判断 <a class="header-anchor" href="#使用-nullif-函数进行条件判断" aria-label="Permalink to &quot;使用 NULLIF 函数进行条件判断&quot;">​</a></h3><p>在另一个场景中，假设你有一个学生成绩表 <code>student_scores</code>，包含学生的考试成绩 <code>score</code> 和平时成绩 <code>classwork_score</code> 字段。如果考试成绩和平时成绩相等，你希望在特定计算中忽略这个学生的数据。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> student_name, score, classwork_score,</span></span>
<span class="line"><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">       NULLIF</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(score, classwork_score) </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">AS</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> adjusted_score</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> student_scores;</span></span></code></pre></div><p>假设表中有以下数据：</p><table tabindex="0"><thead><tr><th>student_name</th><th>score</th><th>classwork_score</th></tr></thead><tbody><tr><td>Alice</td><td>85</td><td>80</td></tr><tr><td>Bob</td><td>90</td><td>90</td></tr><tr><td>Charlie</td><td>75</td><td>72</td></tr></tbody></table><p>查询结果将是：</p><table tabindex="0"><thead><tr><th>student_name</th><th>score</th><th>classwork_score</th><th>adjusted_score</th></tr></thead><tbody><tr><td>Alice</td><td>85</td><td>80</td><td>85</td></tr><tr><td>Bob</td><td>90</td><td>90</td><td>NULL</td></tr><tr><td>Charlie</td><td>75</td><td>72</td><td>75</td></tr></tbody></table><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;">​</a></h2><p>在本文中，我们讨论了 PostgreSQL NULLIF 函数的语法，并提供了几个示例。NULLIF 函数在进行条件判断和处理特定情况时非常有用，可以使查询结果更加准确和灵活。它是 PostgreSQL 中一个重要的函数，在实际应用中可以根据具体需求进行灵活运用。😃</p>`,27)])])}const g=t(d,[["render",l]]);export{c as __pageData,g as default};
