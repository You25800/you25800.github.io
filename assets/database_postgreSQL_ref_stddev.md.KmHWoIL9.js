import{_ as a,c as i,o as e,b3 as t}from"./chunks/framework.CatkIGlB.js";const c=JSON.parse('{"title":"PostgreSQL stddev() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/stddev.md","filePath":"database/postgreSQL/ref/stddev.md","lastUpdated":1690289709000}'),n={name:"database/postgreSQL/ref/stddev.md"};function l(p,s,h,d,k,r){return e(),i("div",null,[...s[0]||(s[0]=[t(`<h1 id="postgresql-stddev-函数" tabindex="-1">PostgreSQL stddev() 函数 <a class="header-anchor" href="#postgresql-stddev-函数" aria-label="Permalink to &quot;PostgreSQL stddev() 函数&quot;">​</a></h1><p>PostgreSQL <code>stddev()</code> 函数是一个聚合函数，它计算所有非 null 输入值的样本标准差。它是 <a href="./stddev_samp.html"><code>stddev_samp()</code></a> 的别名。</p><h2 id="stddev-语法" tabindex="-1"><code>stddev()</code> 语法 <a class="header-anchor" href="#stddev-语法" aria-label="Permalink to &quot;\`stddev()\` 语法&quot;">​</a></h2><p>这里是 PostgreSQL <code>stddev()</code> 的语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">stddev(expr)</span></span></code></pre></div><p>我们通常在 SQLite 中按如下方式使用 <code>stddev()</code> 函数：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> stddev(expr), ...</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> table_name</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">[WHERE ...]</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">[GROUP BY group_expr1, group_expr2, ...];</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>expr</code></em></p><p>必需的。一个列名或者表达式。</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>stddev()</code> 函数返回所有非 null 输入值的样本标准差。</p><p>注意，<code>stddev()</code> 函数只处理那些非 null 的值。也就是说, null 值会被 <code>stddev()</code> 函数忽略。</p><h2 id="stddev-示例" tabindex="-1"><code>stddev()</code> 示例 <a class="header-anchor" href="#stddev-示例" aria-label="Permalink to &quot;\`stddev()\` 示例&quot;">​</a></h2><p>为了演示 PostgreSQL <code>stddev()</code> 的用法，我们使用以下 <a href="/database/postgreSQL/base/UNION.html"><code>UNION</code></a> 和 <a href="/database/postgreSQL/base/select.html"><code>SELECT</code></a> 语句模拟一个表：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 4</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> x</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">UNION</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 5</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> x</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">UNION</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 6</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> x;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> x</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">---</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 4</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 6</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 5</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">3</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> rows</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span></span></code></pre></div><p>下面的语句使用 <code>stddev()</code> 函数计算 <code>x</code> 列中的所有的值的样本标准差：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> stddev(x)</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> (</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">    SELECT</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 4</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> x</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">    UNION</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">    SELECT</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 5</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> x</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">    UNION</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">    SELECT</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 6</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> x</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  ) t;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">         stddev</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">------------------------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 1.00000000000000000000</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">1</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> rows</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span></span></code></pre></div>`,19)])])}const g=a(n,[["render",l]]);export{c as __pageData,g as default};
