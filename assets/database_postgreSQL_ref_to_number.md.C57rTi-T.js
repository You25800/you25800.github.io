import{_ as a,c as s,o as t,b3 as i}from"./chunks/framework.CatkIGlB.js";const k=JSON.parse('{"title":"PostgreSQL to_number() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/to_number.md","filePath":"database/postgreSQL/ref/to_number.md","lastUpdated":1689930032000}'),o={name:"database/postgreSQL/ref/to_number.md"};function n(l,e,d,r,h,p){return t(),s("div",null,[...e[0]||(e[0]=[i('<h1 id="postgresql-to-number-函数" tabindex="-1">PostgreSQL to_number() 函数 <a class="header-anchor" href="#postgresql-to-number-函数" aria-label="Permalink to &quot;PostgreSQL to\\_number() 函数&quot;">​</a></h1><p>PostgreSQL <code>to_number()</code> 函数根据给定的格式将指定的字符串转为一个数字。</p><h2 id="to-number-语法" tabindex="-1"><code>to_number()</code> 语法 <a class="header-anchor" href="#to-number-语法" aria-label="Permalink to &quot;`to_number()` 语法&quot;">​</a></h2><p>这是 PostgreSQL <code>to_number ()</code> 函数的语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">to_number(str </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">TEXT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, format </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">TEXT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">) </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> NUMERIC</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>str</code></em></p><p>必需的。 一个字符串。</p></li><li><p><em><code>format</code></em></p><p>必需的。 转换这个字符串所采用的格式。您可以使用下表中的模板模式来构造数字格式字符串。模式描述<code>9</code>数字位置（如果无关紧要，可以丢弃）<code>0</code>数字位置（不会被删除，即使无关紧要）<code>.</code>小数点<code>,</code>组（千）分隔符<code>PR</code>尖括号中的负值<code>S</code>符号（使用区域设置）<code>L</code>货币符号（使用区域设置）<code>D</code>小数点（使用区域设置）<code>G</code>组分隔符（使用区域设置）<code>MI</code>指定位置的减号（如果数字 &lt; 0）<code>PL</code>在指定位置加号（如果数字 &gt; 0）<code>SG</code>指定位置的加号/减号<code>RN</code>罗马数字（ 介于 1 和 3999 之间）<code>TH</code>, <code>th</code>序号后缀<code>V</code>移位指定的位数<code>EEEE</code>科学记数法的指数</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>to_number()</code> 函数返回一个数值，它由指定的字符串根据指定的格式转换而来。</p><h2 id="to-number-示例" tabindex="-1"><code>to_number()</code> 示例 <a class="header-anchor" href="#to-number-示例" aria-label="Permalink to &quot;`to_number()` 示例&quot;">​</a></h2><p>本示例展示了如何使用 PostgreSQL <code>to_number()</code> 函数根据指定的格式将一个指定的字符串转换为一个数值。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> to_number(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">123,456,789.012-</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">999G999G999D999S</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">   to_number</span></span>\n<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">----------------</span></span>\n<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> -123456789.012</span></span></code></pre></div>',13)])])}const m=a(o,[["render",n]]);export{k as __pageData,m as default};
