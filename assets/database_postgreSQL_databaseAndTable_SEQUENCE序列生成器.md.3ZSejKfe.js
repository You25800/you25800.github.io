import{_ as a,c as i,o as e,b3 as l}from"./chunks/framework.CatkIGlB.js";const r=JSON.parse('{"title":"PostgreSQL SEQUENCE 序列生成器","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/databaseAndTable/SEQUENCE序列生成器.md","filePath":"database/postgreSQL/databaseAndTable/SEQUENCE序列生成器.md","lastUpdated":1690337946000}'),t={name:"database/postgreSQL/databaseAndTable/SEQUENCE序列生成器.md"};function n(p,s,h,d,k,c){return e(),i("div",null,[...s[0]||(s[0]=[l(`<h1 id="postgresql-sequence-序列生成器" tabindex="-1">PostgreSQL SEQUENCE 序列生成器 <a class="header-anchor" href="#postgresql-sequence-序列生成器" aria-label="Permalink to &quot;PostgreSQL SEQUENCE 序列生成器&quot;">​</a></h1><p>在本文中，我们介绍了如何在 PostgreSQL 中创建序列，使用序列和删除序列。</p><p>PostgreSQL <code>SEQUENCE</code> 用于生成一个有序的数字序列。它被称为序列、序列对象或者序列生成器。</p><p>您可以使用 <code>CREATE SEQUENCE</code> 语句创建一个序列，使用 <code>DROP SEQUENCE</code> 删除一个序列。</p><p><a href="./SERIAL自增列.html"><code>SERIAL</code></a> 列和<a href="./标识列.html">标识列</a> 在内部都使用了序列。</p><h2 id="postgresql-create-sequence-语法" tabindex="-1">PostgreSQL <code>CREATE SEQUENCE</code> 语法 <a class="header-anchor" href="#postgresql-create-sequence-语法" aria-label="Permalink to &quot;PostgreSQL \`CREATE SEQUENCE\` 语法&quot;">​</a></h2><p>要在 PostgreSQL 中创建一个序列，请按照如下语法使用 <code>CREATE SEQUENCE</code> 语句：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> [ TEMPORARY | TEMP ] </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SEQUENCE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> [ IF NOT EXISTS ] seq_name</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    [ AS data_type ]</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    [ INCREMENT [ BY ] increment ]</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    [ MINVALUE minvalue | NO MINVALUE ]</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    [ MAXVALUE maxvalue | NO MAXVALUE ]</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    [ START [ WITH ] </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">start</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> ]</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    [ CACHE cache ]</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    [ [ NO ] CYCLE ]</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    [ OWNED BY { table_name.column_name | NONE } ]</span></span></code></pre></div><p>解释说明：</p><ul><li><p><em><code>TEMPORARY | TEMP</code></em></p><p>指定当前序列是一个临时序列。您只能在当前会话中使用。它会在会话结束时被自动删除。 它是可选的。</p></li><li><p><em><code>IF NOT EXISTS</code></em></p><p>如果指定，如果存在同名的序列，则不会引发错误。</p></li><li><p><em><code>seq_name</code></em></p><p>要创建的序列的名称。</p></li><li><p><em><code>data_type</code></em></p><p>它指示了这个序列的数据类型。可用值： <code>smallint</code>, <code>integer</code>, 和 <code>bigint</code>，并且 <code>bigint</code> 是默认值。</p></li><li><p><em><code>INCREMENT [ BY ] increment</code></em></p><p>序列增长的步幅，可以是整数或者负数。正值将产生一个升序序列，负值将产生一个降序序列。默认是值 1。</p></li><li><p><em><code>MINVALUE minvalue | NO MINVALUE</code></em></p><p><code>minvalue</code> 是序列的最小值。 <code>NO MINVALUE</code> 意味着使用数据类型的最小值。 升序序列的默认值是 1, 降序序列的默认值是数据类型的最小值。</p></li><li><p><em><code>MAXVALUE maxvalue | NO MAXVALUE</code></em></p><p><code>maxvalue</code> 是序列的最大值。 <code>NO MAXVALUE</code> 意味着使用数据类型的最大值。 降序序列的默认值是 1, 升序序列的默认值是数据类型的最大值。</p></li><li><p><em><code>START [ WITH ] start</code></em></p><p><code>start</code> 是此序列的起始值。升序序列的默认值是 <code>minvalue</code>，降序序列的默认值是 <code>maxvalue</code>。</p></li><li><p><em><code>CACHE cache</code></em></p><p><code>cache</code> 是缓存在内存中的序列值的数量，以便可以快速访问。 默认值是 1， 1 也是可接受的最小值。</p></li><li><p><em><code>[ NO ] CYCLE</code></em></p><p>指示序列是否可循环的。 如果指定 <code>NO CYCLE</code>，那么序列到结尾的时候，再取值则会发生错误。</p></li><li><p><em><code>OWNED BY { table_name.column_name | NONE }</code></em></p><p>将此序列与指定表的列关联起来。如果此列被删除，此序列会被自动删除。</p></li></ul><h2 id="postgresql-drop-sequence-语法" tabindex="-1">PostgreSQL <code>DROP SEQUENCE</code> 语法 <a class="header-anchor" href="#postgresql-drop-sequence-语法" aria-label="Permalink to &quot;PostgreSQL \`DROP SEQUENCE\` 语法&quot;">​</a></h2><p>要在 PostgreSQL 中删除一个或者多个序列，请按照如下语法使用 <code>DROP SEQUENCE</code> 语句：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">DROP</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> SEQUENCE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> [ IF EXISTS ] seq_name [, ...]</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">[ CASCADE | RESTRICT ];</span></span></code></pre></div><p>解释说明：</p><ul><li><p><em><code>IF EXISTS</code></em></p><p>如果指定的序列不存在不会抛出一个错误。</p></li><li><p><em><code>seq_name</code></em></p><p>要删除的序列的名称。</p></li><li><p><em><code>CASCADE</code></em></p><p>自动删除依赖于此序列的对象，并依次删除依赖这些对象的对象。</p></li><li><p><em><code>RESTRICT</code></em></p><p>如果任何对象依赖此序列，则拒绝删除它。这是默认值。</p></li></ul><h2 id="访问-postgresql-序列" tabindex="-1">访问 PostgreSQL 序列 <a class="header-anchor" href="#访问-postgresql-序列" aria-label="Permalink to &quot;访问 PostgreSQL 序列&quot;">​</a></h2><p>您可以使用以下三个函数操作 PostgreSQL 序列：</p><ul><li><a href="/database/postgreSQL_ref/nextval.html"><code>nextval</code></a>: 获取并返回序列的下一个值。</li><li><a href="/database/postgreSQL_ref/currval.html"><code>currval</code></a>: 返回当前会话中指定序列的当前值。</li><li><a href="/database/postgreSQL_ref/setval.html"><code>setval</code></a>: 重置指定序列的当前值。</li></ul><p>您可以使用以下语句查看指定的序列：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> *</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> seq_name;</span></span></code></pre></div><h2 id="postgresql-序列实例" tabindex="-1">PostgreSQL 序列实例 <a class="header-anchor" href="#postgresql-序列实例" aria-label="Permalink to &quot;PostgreSQL 序列实例&quot;">​</a></h2><p>创建一个从 10 开始步长为 10 的升序序列：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> SEQUENCE</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> asc_seq</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">INCREMENT </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">10</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">START</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 10</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">;</span></span></code></pre></div><p>使用以下 <code>nextval()</code> 函数从序列中获取下一个值：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> nextval(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">asc_seq</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> nextval</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">---------</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">      10</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> row</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span></code></pre></div><p>再次使用以下 <code>nextval()</code> 函数从序列中获取下一个值：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> nextval(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">asc_seq</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> nextval</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">---------</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">      20</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> row</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span></code></pre></div><p>使用 <code>currval()</code> 函数获取序列的当前的值：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> currval(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">asc_seq</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> currval</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">---------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">      20</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">1</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> row</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span></span></code></pre></div><p>使用 <code>setval()</code> 函数设置序列的当前值：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> setval(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">asc_seq</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">50</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> setval</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">--------</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">     50</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> row</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span></code></pre></div><p>再次使用以下 <code>nextval()</code> 函数从序列中获取下一个值：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> nextval(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">asc_seq</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> nextval</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">---------</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">      60</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> row</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span></code></pre></div><p>要查看此序列，请使用以下 SELECT 语句：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> *</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> FROM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> asc_seq;</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> last_value | log_cnt | is_called</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">------------+---------+-----------</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">         60</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> |      </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">32</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> | t</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> row</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span></code></pre></div><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;">​</a></h2><p>在 PostgreSQL 中，您可以使用 <code>CREATE SEQUENCE</code> 语句创建一个序列，使用 <code>DROP SEQUENCE</code> 删除一个序列。 您可以使用这 3 个函数 <code>nextval</code>, <code>currval</code>, 和 <code>setval</code> 操作序列。</p>`,43)])])}const E=a(t,[["render",n]]);export{r as __pageData,E as default};
