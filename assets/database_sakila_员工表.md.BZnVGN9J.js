import{_ as t,c as e,o as s,b3 as d}from"./chunks/framework.CatkIGlB.js";const f=JSON.parse('{"title":"员工表 staff","description":"","frontmatter":{},"headers":[],"relativePath":"database/sakila/员工表.md","filePath":"database/sakila/员工表.md","lastUpdated":1690270507000}'),n={name:"database/sakila/员工表.md"};function p(c,a,o,r,l,i){return s(),e("div",null,[...a[0]||(a[0]=[d(`<h1 id="员工表-staff" tabindex="-1">员工表 staff <a class="header-anchor" href="#员工表-staff" aria-label="Permalink to &quot;员工表 staff&quot;">​</a></h1><p>本文介绍了 Sakila 数据库中的 staff 表的表结构以及与其他表的关系。</p><p><code>staff</code> 表列出了所有员工的信息，包括电子邮件地址、登录信息和图片。</p><p><code>staff</code> 表中定义了外键引用 <a href="./商店表.html"><code>store</code></a> 和 <a href="./地址表.html"><code>address</code></a> 表。</p><p><code>staff</code> 表被 <a href="./租赁表.html"><code>rental</code></a>， <a href="./支付表.html"><code>payment</code></a>和 <a href="./商店表.html"><code>store</code></a> 表中的外键引用。</p><h2 id="表结构" tabindex="-1">表结构 <a class="header-anchor" href="#表结构" aria-label="Permalink to &quot;表结构&quot;">​</a></h2><p><code>staff</code> 表结构如下：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span>+-------------+-------------------+------+-----+-------------------+-----------------------------------------------+</span></span>
<span class="line"><span>| Field       | Type              | Null | Key | Default           | Extra                                         |</span></span>
<span class="line"><span>+-------------+-------------------+------+-----+-------------------+-----------------------------------------------+</span></span>
<span class="line"><span>| staff_id    | tinyint unsigned  | NO   | PRI | NULL              | auto_increment                                |</span></span>
<span class="line"><span>| first_name  | varchar(45)       | NO   |     | NULL              |                                               |</span></span>
<span class="line"><span>| last_name   | varchar(45)       | NO   |     | NULL              |                                               |</span></span>
<span class="line"><span>| address_id  | smallint unsigned | NO   | MUL | NULL              |                                               |</span></span>
<span class="line"><span>| picture     | blob              | YES  |     | NULL              |                                               |</span></span>
<span class="line"><span>| email       | varchar(50)       | YES  |     | NULL              |                                               |</span></span>
<span class="line"><span>| store_id    | tinyint unsigned  | NO   | MUL | NULL              |                                               |</span></span>
<span class="line"><span>| active      | tinyint(1)        | NO   |     | 1                 |                                               |</span></span>
<span class="line"><span>| username    | varchar(16)       | NO   |     | NULL              |                                               |</span></span>
<span class="line"><span>| password    | varchar(40)       | YES  |     | NULL              |                                               |</span></span>
<span class="line"><span>| last_update | timestamp         | NO   |     | CURRENT_TIMESTAMP | DEFAULT_GENERATED on update CURRENT_TIMESTAMP |</span></span>
<span class="line"><span>+-------------+-------------------+------+-----+-------------------+-----------------------------------------------+</span></span></code></pre></div><h2 id="字段说明" tabindex="-1">字段说明 <a class="header-anchor" href="#字段说明" aria-label="Permalink to &quot;字段说明&quot;">​</a></h2><table tabindex="0"><thead><tr><th>字段</th><th>说明</th></tr></thead><tbody><tr><td><code>staff_id</code></td><td>唯一标识工作人员的代理主键。</td></tr><tr><td><code>first_name</code></td><td>工作人员的名字。</td></tr><tr><td><code>last_name</code></td><td>工作人员的姓氏。</td></tr><tr><td><code>address_id</code></td><td><code>address</code> 表中工作人员地址的外键。</td></tr><tr><td><code>picture</code></td><td>包含员工照片的 <code>BLOB</code>。</td></tr><tr><td><code>email</code></td><td>工作人员的电子邮件地址。</td></tr><tr><td><code>store_id</code></td><td>工作人员“家店”。”该员工可以在其他商店工作，但通常被分配到所列商店。</td></tr><tr><td><code>active</code></td><td>这是否是一个活跃的员工。如果员工离开，他们的行不会从此表中删除；相反，此列设置为 <code>FALSE</code>。</td></tr><tr><td><code>username</code></td><td>工作人员用于访问租赁系统的用户名。</td></tr><tr><td><code>password</code></td><td>工作人员用于访问租赁系统的密码。密码应使用该 <code>SHA2()</code> 函数存储为散列 。</td></tr><tr><td><code>last_update</code></td><td>该行的创建时间或最近更新时间。</td></tr></tbody></table>`,10)])])}const _=t(n,[["render",p]]);export{f as __pageData,_ as default};
