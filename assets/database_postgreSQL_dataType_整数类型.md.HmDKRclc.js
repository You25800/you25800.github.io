import{_ as i,c as a,o as t,b3 as e}from"./chunks/framework.CatkIGlB.js";const g=JSON.parse('{"title":"PostgreSQL 整数类型","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/dataType/整数类型.md","filePath":"database/postgreSQL/dataType/整数类型.md","lastUpdated":1690289709000}'),h={name:"database/postgreSQL/dataType/整数类型.md"};function n(l,s,p,k,d,r){return t(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="postgresql-整数类型" tabindex="-1">PostgreSQL 整数类型 <a class="header-anchor" href="#postgresql-整数类型" aria-label="Permalink to &quot;PostgreSQL 整数类型&quot;">​</a></h1><p>本文介绍了 PostgreSQL 中的三种整数数据类型：<code>SMALLINT</code>，<code>INTEGER</code>，和 <code>BIGINT</code>。</p><p>整数类型将内容存储为整数，PostgreSQL 提供了三种整数数据类型： <code>SMALLINT</code>，<code>INTEGER</code>，和 <code>BIGINT</code>。</p><p>下表展示了不同的整数类型的占用的字节数和数值范围：</p><table tabindex="0"><thead><tr><th>类型</th><th>存储大小</th><th>最小值</th><th>最大值</th></tr></thead><tbody><tr><td><code>SMALLINT</code></td><td>2 字节</td><td>-32,768</td><td>32,767</td></tr><tr><td><code>INTEGER</code></td><td>4 字节</td><td>-2,147,483,648</td><td>2,147,483,647</td></tr><tr><td><code>BIGINT</code></td><td>8 字节</td><td>-9,223,372,036,854,775,808</td><td>9,223,372,036,854,775,807</td></tr></tbody></table><p>注意，<code>BIGINT</code> 类型占用空间大，并且会降低数据库性能。</p><h2 id="postgresql-整数类型用法" tabindex="-1">PostgreSQL 整数类型用法 <a class="header-anchor" href="#postgresql-整数类型用法" aria-label="Permalink to &quot;PostgreSQL 整数类型用法&quot;">​</a></h2><p>要定义一个整数类型的列，请使用如下语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">column_name {</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">SMALLINT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> | </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">INTEGER</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> | </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">BIGINT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">} column_constrait</span></span></code></pre></div><p>注意， <code>INT</code> 是 <code>INTEGER</code> 的同义词，您可以使用 <code>INT</code> 代替 <code>INTEGER</code>。</p><p>要定义一个整数类型的<a href="/database/postgreSQL/databaseAndTable/主键.html">主键列</a>，请使用如下语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">column_name {</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">SMALLINT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> | </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">INTEGER</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> | </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">BIGINT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">} </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">GENERATED</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> ALWAYS</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> AS</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> IDENTITY</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> PRIMARY KEY</span></span></code></pre></div><p>要定义一个整数类型的<a href="/database/postgreSQL/databaseAndTable/标识列.html">标识列</a>，请使用如下语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">column_name {</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">SMALLINT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> | </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">INTEGER</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> | </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">BIGINT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">} </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">GENERATED</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> ALWAYS</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> AS</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> IDENTITY</span></span></code></pre></div><p>要定义一个 <a href="/database/postgreSQL/databaseAndTable/SERIAL自增列.html"><code>SERIAL</code> 列</a>， 请使用如下语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">column_name </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">SERIAL</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> PRIMARY KEY</span></span></code></pre></div><p>注意， <code>SMALLSERIAL</code> 的内部类型为 <code>SMALLINT</code>，<code>SERIAL</code> 的内部类型为 <code>INTEGER</code>，<code>BIGSERIAL</code> 的内部类型为 <code>BIGINT</code>。</p><h2 id="postgresql-整数类型实例" tabindex="-1">PostgreSQL 整数类型实例 <a class="header-anchor" href="#postgresql-整数类型实例" aria-label="Permalink to &quot;PostgreSQL 整数类型实例&quot;">​</a></h2><h3 id="smallint-类型实例" tabindex="-1"><code>SMALLINT</code> 类型实例 <a class="header-anchor" href="#smallint-类型实例" aria-label="Permalink to &quot;\`SMALLINT\` 类型实例&quot;">​</a></h3><p>首先，使用下面的语句<a href="./创建表.html">创建一个测试表</a>：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> test_smallint</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">  name</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> TEXT</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> NOT NULL</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">,</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  age </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">SMALLINT</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> NOT NULL</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><p>使用下面的语句<a href="/database/postgreSQL/base/INSERT.html">插入两行数据</a>：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">INSERT INTO</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> test_smallint (</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">name</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, age)</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">VALUES</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> (</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">Tom</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">23</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">), (</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">Lucy</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">20</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">RETURNING </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> name</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> age</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">------+-----</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Tom</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">  |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">  23</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Lucy</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">  20</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">2</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> rows</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span></span></code></pre></div><p>注意， 虽然我们为整数列传入了一个字符类型的值 <code>&#39;23&#39;</code>，PostgreSQL 自动将其转成了数字并存储到数据库。</p><h3 id="使用-integer-列作为主键" tabindex="-1">使用 INTEGER 列作为主键 <a class="header-anchor" href="#使用-integer-列作为主键" aria-label="Permalink to &quot;使用 INTEGER 列作为主键&quot;">​</a></h3><p>通常， <code>INTEGER</code> 数据类型的标识列可以作为主键列：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> test_int_pk</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  id </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">INTEGER</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> GENERATED</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> ALWAYS</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> AS</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> IDENTITY</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> PRIMARY KEY</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">,</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">  name</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> TEXT</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> NOT NULL</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">,</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  age </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">SMALLINT</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> NOT NULL</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><p>这里，<code>id</code> 列是主键列。它的类型是 <code>INTEGER</code>，并且使用了 <code>GENERATED ALWAYS AS IDENTITY</code> 属性。</p><p>使用下面的语句插入和上面例子中相同的两条数据：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">INSERT INTO</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> test_int_pk (</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">name</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, age)</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">VALUES</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> (</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">Tom</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">23</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">), (</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">Lucy</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">20</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">RETURNING </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> id</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> name</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> age</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">----+------+-----</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">  1</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Tom</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">  |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">  23</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">  2</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> Lucy</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">  20</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">2</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> rows</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span></span></code></pre></div><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;">​</a></h2><p>PostgreSQL 提供了三种整数数据类型： <code>SMALLINT</code>，<code>INTEGER</code>，和 <code>BIGINT</code>。您可以根据自己不同的存储需求选择不同的类型以提高存取的效率。</p>`,34)])])}const o=i(h,[["render",n]]);export{g as __pageData,o as default};
