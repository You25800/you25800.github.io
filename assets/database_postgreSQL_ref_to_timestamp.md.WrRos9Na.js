import{_ as i,c as e,o as a,b3 as t}from"./chunks/framework.CatkIGlB.js";const r=JSON.parse('{"title":"PostgreSQL to_timestamp() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/to_timestamp.md","filePath":"database/postgreSQL/ref/to_timestamp.md","lastUpdated":1690159250000}'),d={name:"database/postgreSQL/ref/to_timestamp.md"};function h(l,s,o,p,n,c){return a(),e("div",null,[...s[0]||(s[0]=[t(`<h1 id="postgresql-to-timestamp-函数" tabindex="-1">PostgreSQL to_timestamp() 函数 <a class="header-anchor" href="#postgresql-to-timestamp-函数" aria-label="Permalink to &quot;PostgreSQL to\\_timestamp() 函数&quot;">​</a></h1><p>PostgreSQL <code>to_timestamp()</code> 函数将 Unix 纪元时间转为一个标准的带时区信息的时间戳，或者根据给定的格式将指定的字符串转为时间戳。</p><h2 id="to-timestamp-语法" tabindex="-1"><code>to_timestamp()</code> 语法 <a class="header-anchor" href="#to-timestamp-语法" aria-label="Permalink to &quot;\`to_timestamp()\` 语法&quot;">​</a></h2><p>PostgreSQL <code>to_timestamp ()</code> 函数有两种语法形式：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">to_timestamp(unix_epoch DOUBLE) </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> TIMESTAMP WITH TIME ZONE</span></span></code></pre></div><p>或者</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">to_timestamp(str </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">TEXT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, format </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">TEXT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">) </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> TIMESTAMP WITH TIME ZONE</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>unix_epoch</code></em></p><p>必需的。 Unix 纪元时间（从 1970-01-01 00:00:00+0 开始的秒数）。</p></li><li><p><em><code>str</code></em></p><p>必需的。 一个时间字符串。</p></li><li><p><em><code>format</code></em></p><p>必需的。 转换这个时间字符串所采用的格式。您可以使用下表中的模板模式来构造格式字符串。模式描述<code>HH</code>一天中的小时 （01–12）<code>HH12</code>一天中的小时 （01–12）<code>HH24</code>一天中的小时 （00–23）<code>MI</code>分钟 （00–59）<code>SS</code>秒 （00–59）<code>MS</code>毫秒 （000–999）<code>US</code>微秒（000000–999999）<code>FF1</code>十分之一秒 （0–9）<code>FF2</code>百分之一秒 （00–99）<code>FF3</code>毫秒 （000–999）<code>FF4</code>十分之一毫秒 （0000–9999）<code>FF5</code>百分之一毫秒 （00000–99999）<code>FF6</code>微秒（000000–999999）<code>SSSS</code>, <code>SSSSS</code>午夜过后几秒钟 （0–86399）<code>AM</code>, <code>am</code>, <code>PM</code>, <code>pm</code>上午、下午（无句点）<code>A.M.</code>, <code>a.m.</code>, <code>P.M.</code>, <code>p.m.</code>上午、下午（带句点）<code>Y,YYY</code>年份（4 位或更多位数字），带逗号<code>YYYY</code>年份（4 位或更多数字）<code>YYY</code>年份的最后 3 位数字<code>YY</code>年份的最后 2 位数字<code>Y</code>年份的最后一位数字<code>IYYY</code>ISO 8601 周编号年份（4 位或更多位）<code>IYY</code>ISO 8601 周编号年份的最后 3 位数字<code>IY</code>ISO 8601 周编号年份的最后 2 位数字<code>I</code>ISO 8601 周编号年份的最后一位数字<code>BC</code>, <code>bc</code>, <code>AD</code>, <code>ad</code>公元前、公元后（无句点）<code>B.C.</code>, <code>b.c.</code>, <code>A.D.</code>, <code>a.d.</code>公元前、公元后（带句点）<code>MONTH</code>全大写月份名称（空白填充为 9 个字符）<code>Month</code>全大写月份名称（空白填充为 9 个字符）<code>month</code>全小写月份名称（空白填充为 9 个字符）<code>MON</code>缩写大写月份名称（英文 3 个字符，本地化长度各不相同）<code>Mon</code>缩写大写月份名称（英文 3 个字符，本地化长度不同）<code>mon</code>缩写小写月份名称（英文 3 个字符，本地化长度不同）<code>MM</code>月数 （01–12）<code>DAY</code>全大写的日期名称（空白填充为 9 个字符）<code>Day</code>全大写的日期名称（空白填充为 9 个字符）<code>day</code>全小写的日期名称（空白填充为 9 个字符）<code>DY</code>缩写的大写的日期名称（3 个英文字符，本地化长度各不相同）<code>Dy</code>缩写的大写的日期名称（3 个英文字符，本地化长度各不相同）<code>dy</code>缩写的小写的日期名称（3 个英文字符，本地化长度各不相同）<code>DDD</code>一年中的一天 （001–366）<code>IDDD</code>ISO 8601 周编号年份的一天（001–371;一年中的第 1 天是第一个 ISO 周的星期一）<code>DD</code>月中的某一天 （01–31）<code>D</code>星期几，星期日 （<code>1</code>） 到星期六 （<code>7</code>)<code>ID</code>ISO 8601 星期几，星期一 （<code>1</code>） 到星期日 （<code>7</code>)<code>W</code>每月的一周 （1–5） （第一周从该月的第一天开始）<code>WW</code>一年中的周数 （1–53） （第一周从一年的第一天开始）<code>IW</code>ISO 8601 周编号年份的周号（01–53;一年中的第一个星期四在第 1 周）<code>CC</code>世纪（2 位数字）（二十一世纪开始于 2001-01-01）<code>J</code>儒略历日期（自公元前 4714 年 11 月 24 日当地午夜以来的整数天)<code>Q</code>季度<code>RM</code>大写罗马数字形式的月份（I 到 XII; I 是 1 月）<code>rm</code>小写罗马数字形式的月份 （i 到 xii; i 是 1 月）<code>TZ</code>大写时区缩写（仅 <code>to_char</code> 支持)<code>tz</code>小写时区缩写（仅 <code>to_char</code> 支持)<code>TZH</code>时区小时<code>TZM</code>时区分钟<code>OF</code>时区与 UTC 的偏移量（仅 <code>to_char</code> 支持)</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>to_timestamp()</code> 函数返回一个带有时区信息的时间戳值，它从一个字符串根据指定的格式转换而来。</p><h2 id="to-timestamp-示例" tabindex="-1"><code>to_timestamp()</code> 示例 <a class="header-anchor" href="#to-timestamp-示例" aria-label="Permalink to &quot;\`to_timestamp()\` 示例&quot;">​</a></h2><h3 id="转换-unix-纪元时间" tabindex="-1">转换 Unix 纪元时间 <a class="header-anchor" href="#转换-unix-纪元时间" aria-label="Permalink to &quot;转换 Unix 纪元时间&quot;">​</a></h3><p>本示例展示了如何使用 PostgreSQL <code>to_timestamp()</code> 函数将一个 Unix 纪元时间转为一个标准的带时区信息的时间戳并返回。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> to_timestamp(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1652704873</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">      to_timestamp</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">------------------------</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 2022</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">05</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">16</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 20</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">:</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">41</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">:</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">13</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">+</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">08</span></span></code></pre></div><h3 id="转换时间字符串" tabindex="-1">转换时间字符串 <a class="header-anchor" href="#转换时间字符串" aria-label="Permalink to &quot;转换时间字符串&quot;">​</a></h3><p>本示例展示了如何使用 PostgreSQL <code>to_timestamp()</code> 函数根据指定的格式将一个指定的时间字符串转换为一个时间戳值。</p><h4 id="示例-1" tabindex="-1">示例 1 <a class="header-anchor" href="#示例-1" aria-label="Permalink to &quot;示例 1&quot;">​</a></h4><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> to_timestamp(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">2022-05-17</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">YYYY-MM-DD</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">      to_timestamp</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">------------------------</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 2022</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">05</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">17</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 00</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">:</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">00</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">:</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">00</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">+</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">08</span></span></code></pre></div><h4 id="示例-2" tabindex="-1">示例 2 <a class="header-anchor" href="#示例-2" aria-label="Permalink to &quot;示例 2&quot;">​</a></h4><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> to_timestamp(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">2022-05-17 10:10:10.022.000001</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">YYYY-MM-DD HH:MI:SS.MS.US</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">         to_timestamp</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">-------------------------------</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 2022</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">05</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">17</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 10</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">:</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">10</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">:</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">10</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">.</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">022001</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">+</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">08</span></span></code></pre></div>`,24)])])}const m=i(d,[["render",h]]);export{r as __pageData,m as default};
