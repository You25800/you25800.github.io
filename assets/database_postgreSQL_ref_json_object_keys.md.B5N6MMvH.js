import{_ as e,c as a,o as i,b3 as t}from"./chunks/framework.CatkIGlB.js";const r=JSON.parse('{"title":"PostgreSQL json_object_keys() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/json_object_keys.md","filePath":"database/postgreSQL/ref/json_object_keys.md","lastUpdated":1690180485000}'),n={name:"database/postgreSQL/ref/json_object_keys.md"};function o(l,s,p,h,k,c){return i(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="postgresql-json-object-keys-函数" tabindex="-1">PostgreSQL json_object_keys() 函数 <a class="header-anchor" href="#postgresql-json-object-keys-函数" aria-label="Permalink to &quot;PostgreSQL json\\_object\\_keys() 函数&quot;">​</a></h1><p>PostgreSQL <code>json_object_keys()</code> 函数返回指定的 JSON 对象中的顶层键的集合。</p><h2 id="json-object-keys-语法" tabindex="-1"><code>json_object_keys()</code> 语法 <a class="header-anchor" href="#json-object-keys-语法" aria-label="Permalink to &quot;\`json_object_keys()\` 语法&quot;">​</a></h2><p>这是 PostgreSQL <code>json_object_keys()</code> 函数的语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">json_object_keys(any_object </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">JSON</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">) </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> SETOF </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">TEXT</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>any_object</code></em></p><p>必需的。 一个 JSON 对象。</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>json_object_keys()</code> 函数返回一个文本的集合（<code>SETOF</code>），它包含了指定的 JSON 对象中的所有的顶层的键。</p><h2 id="json-object-keys-示例" tabindex="-1"><code>json_object_keys()</code> 示例 <a class="header-anchor" href="#json-object-keys-示例" aria-label="Permalink to &quot;\`json_object_keys()\` 示例&quot;">​</a></h2><p>本示例展示了如何使用 PostgreSQL <code>json_object_keys()</code> 函数获取一个 JSON 对象的所有顶层的键。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> json_object_keys(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">{&quot;name&quot;: &quot;Tom&quot;, &quot;age&quot;: 20, &quot;hobbies&quot;: [&quot;sports&quot;, &quot;cars&quot;]}</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> json_object_keys</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">------------------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> name</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> age</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> hobbies</span></span></code></pre></div><p>由于 <code>json_object_keys()</code> 函数返回值为 <code>SETOF</code> 类型，因此您可以在 <code>SELECT * FROM</code> 语句中使用 <code>json_object_keys()</code>：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    *</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">FROM</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    json_object_keys(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">{&quot;name&quot;: &quot;Tom&quot;, &quot;age&quot;: 20, &quot;hobbies&quot;: [&quot;sports&quot;, &quot;cars&quot;]}</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">    AS</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> x(keys);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">  keys</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">---------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> name</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> age</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> hobbies</span></span></code></pre></div>`,16)])])}const g=e(n,[["render",o]]);export{r as __pageData,g as default};
