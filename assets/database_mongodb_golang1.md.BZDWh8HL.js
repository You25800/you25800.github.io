import{_ as i,c as a,o as h,b3 as t}from"./chunks/framework.CatkIGlB.js";const F=JSON.parse('{"title":"模版引擎","description":"","frontmatter":{},"headers":[],"relativePath":"database/mongodb/golang1.md","filePath":"database/mongodb/golang1.md","lastUpdated":1690815862000}'),k={name:"database/mongodb/golang1.md"};function l(n,s,p,e,D,r){return h(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="模版引擎" tabindex="-1">模版引擎 <a class="header-anchor" href="#模版引擎" aria-label="Permalink to &quot;模版引擎&quot;">​</a></h1><h2 id="模板与渲染" tabindex="-1"><strong>模板与渲染</strong> <a class="header-anchor" href="#模板与渲染" aria-label="Permalink to &quot;**模板与渲染**&quot;">​</a></h2><p>在一些前后端分离的 Web 架构中, 我们通常需要在后端将一些数据渲染到 HTML 文档中, 从而实现动态的网页(网页的布局和样式大致一样, 但展示的内容并不一样) 效果.</p><p>我们这里说的模板可以理解为事先定义好的 HTML 文档文件, 模板渲染的左右机制可以简单理解为文本替换操作---使用相应的数据去替换 HTML 文档中实现准备好的标记.</p><p>很多编程语言的 Web 框架中都使用各种模板引擎, 比如 Python 语言中 Flask 框架中使用 jinja2 模板引擎.</p><h2 id="go-语言的模板引擎" tabindex="-1"><strong>Go 语言的模板引擎</strong> <a class="header-anchor" href="#go-语言的模板引擎" aria-label="Permalink to &quot;**Go 语言的模板引擎**&quot;">​</a></h2><p>Go 语言内置了文本模板引擎<code>text/template</code>和用于 HTML 文档的 html/templant. 它们的作用机制可以简单归纳如下:</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1.</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> 模板文件通常定义为</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">tmpl 和</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">tpl 为后缀</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">\`</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">(也可以使用其他后缀)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">\`</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> 必须使用 utf</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">8</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> 编码</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">2.</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 模板文件中使用</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">{{</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">和</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">}}</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">包裹和标识需要传入的数据</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">3.</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> 传给模板这样的数据就可以通过点号</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">\`</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">(.)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">\`</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">来访问</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">如果数据是复杂类型的数据</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 可以通过</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">{{.</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">FieldName</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">}}</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">来访问它的字段</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">4.</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> 除</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">\`</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">{{和}}</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">\`</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">包裹的内容外</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> 其他内容均不做修改原样输出</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span></span></code></pre></div><h2 id="模板引擎的使用" tabindex="-1">模板引擎的使用 <a class="header-anchor" href="#模板引擎的使用" aria-label="Permalink to &quot;模板引擎的使用&quot;">​</a></h2><p>Go 语言模板引擎的使用可以分文三部分: 定义模板文件/解析模板文件/渲染模板文件</p><blockquote><h3 id="定义模板文件" tabindex="-1">定义模板文件 <a class="header-anchor" href="#定义模板文件" aria-label="Permalink to &quot;定义模板文件&quot;">​</a></h3></blockquote><p>其中, 定义模板文件时需要我们按照相关语法规则去编写, 后文会详细介绍.</p><blockquote><h4 id="解析模板文件" tabindex="-1">解析模板文件 <a class="header-anchor" href="#解析模板文件" aria-label="Permalink to &quot;解析模板文件&quot;">​</a></h4></blockquote><p>上面定义好了模板文件之后,可以使用下面的常用方法去解析模板文件, 得到模板对象:</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">func</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> (</span><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;">t </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">Template</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> Parse</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;">src</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> string</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> (*</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">Template</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> error</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">func</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> ParseFiles</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;">filenames</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> ...</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">string</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> (*</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">Template</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> error</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">func</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> ParseGlob</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;">pattern</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> string</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> (*</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">Template</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> error</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span></span></code></pre></div><p>当然, 你也可以使用<code>func New(name string) *Template</code>函数创建一个名为<code>name</code>的模板, 然后对其调用上面的方法去解析模板字符串或模板文件.</p><blockquote><h4 id="模板渲染" tabindex="-1">模板渲染 <a class="header-anchor" href="#模板渲染" aria-label="Permalink to &quot;模板渲染&quot;">​</a></h4></blockquote><p>渲染模板简单来说就是使用数据去填充模板, 当然实际上可能会复杂很多.</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">func(</span><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;">t </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">Template</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> Execute</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;">wr</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> io</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">Writer</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;"> data</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> interface)</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> error</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">func(</span><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;">t </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">Template</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> ExecuteTemplate</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;">wr</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> io</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">Writer</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;"> name</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> string</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;"> data</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> interface{})</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> error</span></span></code></pre></div><blockquote><h4 id="基本示例" tabindex="-1">基本示例 <a class="header-anchor" href="#基本示例" aria-label="Permalink to &quot;基本示例&quot;">​</a></h4></blockquote><h5 id="定义模板文件-1" tabindex="-1">定义模板文件 <a class="header-anchor" href="#定义模板文件-1" aria-label="Permalink to &quot;定义模板文件&quot;">​</a></h5><p>我们按照 Go 模板语法定义一个<code>hello.tmpl</code>的模板文件, 内容如下:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&lt;!</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">DOCTYPE</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> html</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">html</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> lang</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">zh-CN</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">  &lt;</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">head</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">meta</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> charset</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">UTF-8</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">meta</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> name</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">viewport</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> content</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">width=devie-width, initial-scale=1.0</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">meta</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> http-equiv</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">X-UA-Compatible</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> content</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">ie=edge</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">title</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">Hello</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">title</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">  &lt;/</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">head</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">  &lt;</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">body</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">p</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">Hello {{.}}</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">p</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">p</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&gt;&lt;/</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">p</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">  &lt;/</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">body</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">  &lt;</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">html</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&gt;&lt;/</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">html</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E53935;--shiki-dark:#F07178;">html</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&gt;</span></span></code></pre></div><h5 id="解析模板和渲染模板文件" tabindex="-1">解析模板和渲染模板文件 <a class="header-anchor" href="#解析模板和渲染模板文件" aria-label="Permalink to &quot;解析模板和渲染模板文件&quot;">​</a></h5><p>然后我们创建一个<code>main.go</code>文件,在其中写下 HTTP server 端代码如下:</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">// main.go</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">func</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> sayHello</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;">w</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> http</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">ResponseWriter</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;"> r</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> *</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">http</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">Request</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">    // 解析指定文件生成模板对象</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    tmpl</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> err </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">:=</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> template</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">ParseFiles</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">./hello.tmpl</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">    if</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> err </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">!=</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> nil</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">        fmt</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">Println</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">create template failed, err:</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> err</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">        return</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    }</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">    // 利用给定数据渲染模板, 并将结果写入w</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    tmpl</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">Execute</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">w</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">小明</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">func</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> main</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">()</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    http</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">HandleFunc</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">/</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> sayHello</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">    err </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">:=</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> http</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">ListenAndServe</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">:9090</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> nil)</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">    if</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> err </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">!=</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> nil</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">        fmt</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">Println</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">HTTP SERVER failed,err:</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> err</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">        return</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    }</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">}</span></span></code></pre></div>`,26)])])}const g=i(k,[["render",l]]);export{F as __pageData,g as default};
