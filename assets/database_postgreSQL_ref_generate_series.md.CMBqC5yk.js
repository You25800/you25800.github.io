import{_ as i,c as a,o as e,b3 as n}from"./chunks/framework.CatkIGlB.js";const g=JSON.parse('{"title":"PostgreSQL generate_series() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/generate_series.md","filePath":"database/postgreSQL/ref/generate_series.md","lastUpdated":1690337946000}'),t={name:"database/postgreSQL/ref/generate_series.md"};function l(p,s,h,k,r,d){return e(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="postgresql-generate-series-函数" tabindex="-1">PostgreSQL generate_series() 函数 <a class="header-anchor" href="#postgresql-generate-series-函数" aria-label="Permalink to &quot;PostgreSQL generate\\_series() 函数&quot;">​</a></h1><p>PostgreSQL <code>generate_series()</code> 函数根据指定的开始值、结束值和步长返回一个基于系列的集合。</p><p>比如，您可以使用 <code>generate_series()</code> 函数产生一个包含 <code>1 ... 5</code> 的集合。</p><h2 id="generate-series-语法" tabindex="-1"><code>generate_series()</code> 语法 <a class="header-anchor" href="#generate-series-语法" aria-label="Permalink to &quot;\`generate_series()\` 语法&quot;">​</a></h2><p>这里是 PostgreSQL <code>generate_series()</code> 函数的语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;">generate_series</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">start</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">stop</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">[, step]) </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> setof</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>start</code></em></p><p>必需的。 起始值。 它可以是 <code>integer</code>, <code>bigint</code>, <code>numeric</code>, <code>timestamp</code>, <code>timestamp with time zone</code> 类型的值。</p></li><li><p><em><code>stop</code></em></p><p>必需的。 结束值。 它可以是 <code>integer</code>, <code>bigint</code>, <code>numeric</code>, <code>timestamp</code>, <code>timestamp with time zone</code> 类型的值。它的数据类型应该和 <code>start</code> 参数相同。</p></li><li><p><em><code>step</code></em></p><p>可选的。 步长。 如果 <code>start</code> 和 <code>stop</code> 是数字类型， 它应该和他们数据类型相同，并且是可选的，它的默认值是 <code>1</code>。 如果 <code>start</code> 和 <code>stop</code> 是时间戳类型，它应该是 <code>interval</code> 类型的数据，并且是必须的。</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>generate_series()</code> 函数返回一个包含了多行的集合。</p><h2 id="generate-series-实例" tabindex="-1"><code>generate_series()</code> 实例 <a class="header-anchor" href="#generate-series-实例" aria-label="Permalink to &quot;\`generate_series()\` 实例&quot;">​</a></h2><p>这里整理了一些 <code>generate_series()</code> 函数的示例。</p><p>要产生一个包含了 1 到 5 中间所有整数的集合，请使用以下语句：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> generate_series</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">5</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> generate_series</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">-----------------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">               1</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">               2</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">               3</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">               4</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">               5</span></span></code></pre></div><p>您可以为 <code>generate_series</code> 指定一个别名，如下：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> generate_series</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">5</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">) </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">AS</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> i;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> i</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">---</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 1</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 2</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 3</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 4</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 5</span></span></code></pre></div><p>要产生一个包含了 5 到 1 中间所有整数的集合，请使用以下语句：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> generate_series</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">5</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> generate_series</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">-----------------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">               5</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">               4</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">               3</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">               2</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">               1</span></span></code></pre></div><p>要产生一个包含了 1 到 5 中间间隔为 1.1 的所有数字的集合，请使用以下语句：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> generate_series</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">5</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">.</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> generate_series</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">-----------------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">               1</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">             2.1</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">             3.2</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">             4.3</span></span></code></pre></div><p>要产生一个包含了 <code>2022-06-06</code> 与 <code>2022-06-10</code> 之间间隔为 12 小时的所有时间的集合，请使用以下语句：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> generate_series</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">2022-06-06</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">::</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">timestamp</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">,</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">2022-06-10</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">,</span></span>
<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">    &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">12 hours</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">   generate_series</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">---------------------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 2022-06-06</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> 00:00:00</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 2022-06-06</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> 12:00:00</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 2022-06-07</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> 00:00:00</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 2022-06-07</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> 12:00:00</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 2022-06-08</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> 00:00:00</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 2022-06-08</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> 12:00:00</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 2022-06-09</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> 00:00:00</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 2022-06-09</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> 12:00:00</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> 2022-06-10</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;"> 00:00:00</span></span></code></pre></div>`,27)])])}const o=i(t,[["render",l]]);export{g as __pageData,o as default};
