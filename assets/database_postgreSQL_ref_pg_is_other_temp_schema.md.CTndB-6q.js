import{_ as e,c as a,o as i,b3 as t}from"./chunks/framework.CatkIGlB.js";const m=JSON.parse('{"title":"PostgreSQL pg_is_other_temp_schema() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/pg_is_other_temp_schema.md","filePath":"database/postgreSQL/ref/pg_is_other_temp_schema.md","lastUpdated":1690341661000}'),p={name:"database/postgreSQL/ref/pg_is_other_temp_schema.md"};function h(l,s,n,o,c,d){return i(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="postgresql-pg-is-other-temp-schema-函数" tabindex="-1">PostgreSQL pg_is_other_temp_schema() 函数 <a class="header-anchor" href="#postgresql-pg-is-other-temp-schema-函数" aria-label="Permalink to &quot;PostgreSQL pg\\_is\\_other\\_temp\\_schema() 函数&quot;">​</a></h1><p>PostgreSQL <code>pg_is_other_temp_schema()</code> 函数检查指定的 OID 是否是另一个会话的临时模式（Schema）的 OID。</p><h2 id="pg-is-other-temp-schema-语法" tabindex="-1"><code>pg_is_other_temp_schema()</code> 语法 <a class="header-anchor" href="#pg-is-other-temp-schema-语法" aria-label="Permalink to &quot;\`pg_is_other_temp_schema()\` 语法&quot;">​</a></h2><p>这里是 PostgreSQL <code>pg_is_other_temp_schema()</code> 函数的语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">pg_is_other_temp_schema(</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">oid</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">) </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> oid</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>oid</code></em></p><p>待检查的 OID。</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>pg_is_other_temp_schema()</code> 函数检查指定的 OID 是否是另一个会话的临时模式（Schema）的 OID，并返回 <code>TRUE</code> 或者 <code>FALSE</code>。</p><h2 id="pg-is-other-temp-schema-示例" tabindex="-1"><code>pg_is_other_temp_schema()</code> 示例 <a class="header-anchor" href="#pg-is-other-temp-schema-示例" aria-label="Permalink to &quot;\`pg_is_other_temp_schema()\` 示例&quot;">​</a></h2><p>首先，让我们通过以下语句创建一个临时表：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> TEMPORARY </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">TABLE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> test (id </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">INT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><p>然后，<a href="./pg_my_temp_schema.html">查看当前会话的临时模式（Schema）的 OID</a>：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> pg_my_temp_schema</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">()</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> pg_my_temp_schema</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">-------------------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">             17380</span></span></code></pre></div><p>在当前会话中，我们使用 <code>pg_is_other_temp_schema()</code> 检查 OID <code>17380</code> 是否是其他会话的临时模式（Schema）的 OID：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> pg_is_other_temp_schema(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">17380</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> pg_is_other_temp_schema</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">-------------------------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> f</span></span></code></pre></div><p>这里， <code>pg_is_other_temp_schema()</code> 函数返回了 <code>f</code> (<code>FALSE</code>)。因为 <code>17380</code> 是当前会话的临时模式（Schema）的 OID，而不是其他会话的临时模式（Schema）的 OID。</p><p>让我们重新开启一个会话，在执行 <code>pg_is_other_temp_schema()</code> 函数：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> pg_is_other_temp_schema(</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">17380</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> pg_is_other_temp_schema</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">-------------------------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> t</span></span></code></pre></div>`,22)])])}const k=e(p,[["render",h]]);export{m as __pageData,k as default};
