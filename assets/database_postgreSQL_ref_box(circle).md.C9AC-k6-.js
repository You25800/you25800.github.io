import{_ as i,c as a,o as e,b3 as t}from"./chunks/framework.CatkIGlB.js";const k=JSON.parse('{"title":"PostgreSQL box(circle) 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/box(circle).md","filePath":"database/postgreSQL/ref/box(circle).md","lastUpdated":1690352360000}'),l={name:"database/postgreSQL/ref/box(circle).md"};function h(n,s,p,c,r,o){return e(),a("div",null,[...s[0]||(s[0]=[t('<h1 id="postgresql-box-circle-函数" tabindex="-1">PostgreSQL box(circle) 函数 <a class="header-anchor" href="#postgresql-box-circle-函数" aria-label="Permalink to &quot;PostgreSQL box(circle) 函数&quot;">​</a></h1><p>PostgreSQL <code>box(circle)</code> 函数计算并返回一个指定的圆的内切的矩形。</p><p>一个矩形 <code>box</code> 由右上角的点和左下角的点表示，比如：<code>(1,1),(0,0)</code></p><h2 id="box-circle-语法" tabindex="-1"><code>box(circle)</code> 语法 <a class="header-anchor" href="#box-circle-语法" aria-label="Permalink to &quot;`box(circle)` 语法&quot;">​</a></h2><p>这是 PostgreSQL <code>box(circle)</code> 函数的语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">box</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">circle</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">) </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> box</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>circle</code></em></p><p>必需的。 一个圆形。比如： <code>circle &#39;&lt;(0,0),2&gt;&#39;</code>。</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>box(circle)</code> 函数返回一个指定的圆的内切的矩形。</p><h2 id="box-circle-示例" tabindex="-1"><code>box(circle)</code> 示例 <a class="header-anchor" href="#box-circle-示例" aria-label="Permalink to &quot;`box(circle)` 示例&quot;">​</a></h2><p>下面的语句示例展示了如何使用 PostgreSQL <code>box(circle)</code> 函数计算圆 <code>circle &#39;&lt;(0,0),1&gt;&#39;</code> 的内切的矩形。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> box</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">circle</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">&lt;(0,0),1&gt;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">                                        box</span></span>\n<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">-----------------------------------------------------------------------------------</span></span>\n<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> (</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">0.7071067811865475,0.7071067811865475</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">,(-0.7071067811865475,-0.7071067811865475</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span></code></pre></div><p>下面的语句展示了如何使用 PostgreSQL <code>box(circle)</code> 函数计算圆 <code>circle &#39;&lt;(5,5),2&gt;&#39;</code> 的内切的矩形。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> box</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">circle</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">&lt;(5,5),2&gt;</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">                                     box</span></span>\n<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">-----------------------------------------------------------------------------</span></span>\n<span class="line"><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;"> (</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">6.414213562373095,6.414213562373095</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">,(3.585786437626905,3.585786437626905</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">)</span></span></code></pre></div>',17)])])}const g=i(l,[["render",h]]);export{k as __pageData,g as default};
