import{_ as e,c as t,o as l,b3 as c}from"./chunks/framework.CatkIGlB.js";const E=JSON.parse('{"title":"概述","description":"","frontmatter":{},"headers":[],"relativePath":"database/elasticsearch/README.md","filePath":"database/elasticsearch/README.md","lastUpdated":1669898765000}'),i={name:"database/elasticsearch/README.md"};function s(r,a,o,d,h,n){return l(),t("div",null,[...a[0]||(a[0]=[c('<h1 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h1><h4 id="新特性" tabindex="-1">新特性 <a class="header-anchor" href="#新特性" aria-label="Permalink to &quot;新特性&quot;">​</a></h4><p>从2019年4月10日Elastaticsearch7.0版本的发布，到2022年2月11日Elasticsearch8.0版本的发布，近3年间，基于不断优化的开发设计理念，Elasticsearch发布了一系列的小版本。这些小版本在以下方面取得了长足的进步并同时引入一些全新的功能：</p><ul><li>减少内存堆使用，完全支持ARM架构，引入全新的方式以使用更少的储存空间，从而让每个节点托管更多的数据</li><li>降低查询开销，在大规模部署中成效尤为明显</li><li>提高日期直方图和搜索聚合的速度，增强了页面缓存的性能，并创建了一个新的<code>pre-filter</code>搜索短语</li><li>在Elasticsearch7.3 和 Elasticsearch7.4版本中，引入了对矢量相似函数的支持</li></ul><blockquote><p>在最新发布的8.0版本中，也同样增加和完善了很多新的功能</p></blockquote><ul><li>增加了对自然语言处理（NLP）模型的原生支持，让矢量搜索功能更容易实现，让客户和员工能够使用他们自己的文字和语言来搜索并收到高度相关的结果。</li><li>直接在Elasticsearch中执行命令实体识别、情感分心、文本分类等，而无需使用额外的组件或进行编码。</li><li>Elasticsearch8.0基于 Lucene9.0 开发的，那些利用现代<code>NLP</code>的搜索体验，都可以借助（新增的）对近似最近邻搜索的原生支持，快速且大规模的实现。通过<code>ANN</code>，可以快速并高效的将基于矢量的查询与基于矢量的文档语料库进行比较。</li><li>可以直接在Elasticsearch中使用PyTorch Machine Learning模型（如BERT），并在Elasticsearch中原生使用这些模型执行推理</li></ul>',6)])])}const p=e(i,[["render",s]]);export{E as __pageData,p as default};
