import{_ as i,c as a,o as e,b3 as l}from"./chunks/framework.CatkIGlB.js";const r=JSON.parse('{"title":"PostgreSQL 重建索引","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/index/重建索引.md","filePath":"database/postgreSQL/index/重建索引.md","lastUpdated":1689834507000}'),t={name:"database/postgreSQL/index/重建索引.md"};function p(n,s,h,d,o,k){return e(),a("div",null,[...s[0]||(s[0]=[l('<h1 id="postgresql-重建索引" tabindex="-1">PostgreSQL 重建索引 <a class="header-anchor" href="#postgresql-重建索引" aria-label="Permalink to &quot;PostgreSQL 重建索引&quot;">​</a></h1><p>本文介绍在 PostgreSQL 中如何重建索引。</p><p>当索引被损坏或者包含错误的数据时，您可以重建索引。PostgreSQL 提供 <code>REINDEX</code> 语句用来重建一个或多个索引。</p><h2 id="postgresql-reindex-语法" tabindex="-1">PostgreSQL <code>REINDEX</code> 语法 <a class="header-anchor" href="#postgresql-reindex-语法" aria-label="Permalink to &quot;PostgreSQL `REINDEX` 语法&quot;">​</a></h2><p>这里是 PostgreSQL <code>REINDEX</code> 语句的语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">REINDEX</span></span>\n<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  [ ( VERBOSE ) ]</span></span>\n<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  [ ( CONCURRENTLY [ boolean ] ) ]</span></span>\n<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  [ ( TABLESPACE new_tablespace ) ]</span></span>\n<span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">  { </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">INDEX</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> | </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">TABLE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> | </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SCHEMA</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> | </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">DATABASE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> | </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SYSTEM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> } </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">name</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">;</span></span></code></pre></div><p>说明：</p><ul><li><p><code>VERBOSE</code> 关键字是可选的。如果提供此关键字，重建索引时将会显示进度。</p></li><li><p><code>CONCURRENTLY</code> 关键是可选的。它指示 PostgreSQL 在重建索引时，不需要阻止任何表上的操作。</p></li><li><p><code>TABLESPACE new_tablespace</code> 是可选的。它指示 PostgreSQL 在新的表空间重建索引。</p></li><li><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">{ </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">INDEX</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> | </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">TABLE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> | </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SCHEMA</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> | </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">DATABASE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> | </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SYSTEM</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> }</span></span></code></pre></div><p>用来指定重建的索引对象。</p><ul><li><code>INDEX</code>: 重建指定的索引。</li><li><code>TABLE</code>: 重建指定的表中的所有的索引。</li><li><code>SCHEMA</code>: 重建指定的 Schema 中的所有的索引。</li><li><code>DATABASE</code>: 重建指定的数据库中的所有的索引。</li><li><code>SYSTEM</code>: 重建指定的数据库的系统目录中的所有的索引。</li></ul></li><li><p><code>name</code> 指定对象的名字。</p></li></ul><p>下面是一些具体的用法：</p><ul><li><p>要重建单个索引，请使用 <code>INDEX</code> 关键字并指定索引名称：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">REINDEX </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">INDEX</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> index_name;</span></span></code></pre></div></li><li><p>要重建一个表中的所有索引，请使用 <code>TABLE</code> 关键字并指定表的名称：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">REINDEX </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">TABLE</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> table_name;</span></span></code></pre></div></li><li><p>要重建一个架构中的所有索引，请使用 <code>SCHEMA</code> 关键字并指定架构的名称：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">REINDEX </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SCHEMA</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> schema_name;</span></span></code></pre></div></li><li><p>要重建一个数据库中的所有索引，请使用 <code>DATABASE</code> 关键字并指定数据库名称：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">REINDEX </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">DATABASE</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> database_name</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">;</span></span></code></pre></div></li><li><p>要重建一个数据中的系统目录上的所有索引，请使用 <code>SYSTEM</code> 关键字并指定数据库名称：：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">REINDEX </span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SYSTEM</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> database_name</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">;</span></span></code></pre></div></li></ul><h2 id="reindex-与-drop-index-create-index" tabindex="-1"><code>REINDEX</code> 与 <code>DROP INDEX</code>&amp;<code>CREATE INDEX</code> <a class="header-anchor" href="#reindex-与-drop-index-create-index" aria-label="Permalink to &quot;`REINDEX` 与 `DROP INDEX`&amp;`CREATE INDEX`&quot;">​</a></h2><p>重建索引的过程相当于先<a href="./删除索引.html">删除索引</a>在<a href="./创建索引.html">新建相同定义的索引</a>。也就是说： <code>REINDEX</code> 相当于 <a href="./删除索引.html"><code>DROP INDEX</code></a> 和 <a href="./创建索引.html"><code>CREATE INDEX</code></a> 语句的组合。它他们之间也有一些不同之处：</p><ul><li><code>REINDEX</code> 语句： <ul><li>锁定索引所属表的写入但不锁定读取。</li><li>对正在处理的索引进行排他锁，这会阻止尝试使用该索引的读取。除非您指定 <code>CONCURRENTLY</code> 关键字。</li></ul></li><li><code>DROP INDEX</code> 和 <code>CREATE INDEX</code> 语句： <ul><li><code>DROP INDEX</code> 通过获取表上的排他锁来锁定索引所属表的写入和读取。</li><li><code>CREATE INDEX</code> 语句会锁定索引的父表中的写入但不锁定读取。但是，在创建索引期间读取可能会很昂贵。</li></ul></li></ul><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;">​</a></h2><p>本文介绍了在 PostgreSQL 中如何使用 <code>REINDEX</code> 语句重建一个或多个索引。</p>',15)])])}const E=i(t,[["render",p]]);export{r as __pageData,E as default};
