import{_ as e,c as a,o as i,b3 as t}from"./chunks/framework.CatkIGlB.js";const k=JSON.parse('{"title":"PostgreSQL nextval() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/nextval.md","filePath":"database/postgreSQL/ref/nextval.md","lastUpdated":1690337946000}'),l={name:"database/postgreSQL/ref/nextval.md"};function n(p,s,h,d,o,c){return i(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="postgresql-nextval-函数" tabindex="-1">PostgreSQL nextval() 函数 <a class="header-anchor" href="#postgresql-nextval-函数" aria-label="Permalink to &quot;PostgreSQL nextval() 函数&quot;">​</a></h1><p>PostgreSQL <code>nextval()</code> 函数将指定的序列前进到它的下一个值并返回那个值。此操作是一个原子操作。</p><h2 id="nextval-语法" tabindex="-1"><code>nextval()</code> 语法 <a class="header-anchor" href="#nextval-语法" aria-label="Permalink to &quot;\`nextval()\` 语法&quot;">​</a></h2><p>这里是 PostgreSQL <code>nextval()</code> 函数的语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">nextval(sequence_name </span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;">TEXT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">) </span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#9C3EDA;--shiki-dark:#C792EA;"> BIGINT</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>sequence_name</code></em></p><p>必需的。 序列的名称。</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>nextval()</code> 函数将指定的序列前进到它的下一个值并返回那个值。</p><h2 id="nextval-示例" tabindex="-1"><code>nextval()</code> 示例 <a class="header-anchor" href="#nextval-示例" aria-label="Permalink to &quot;\`nextval()\` 示例&quot;">​</a></h2><p>首先，让我们使用 <code>CREATE SEQUENCE</code> 语句创建一个简单的序列生成器 <code>my_sequence</code>：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">DROP</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> SEQUENCE</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> IF</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> EXISTS</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> my_sequence;</span></span>
<span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> SEQUENCE</span><span style="--shiki-light:#6182B8;--shiki-dark:#82AAFF;"> my_sequence</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> START</span><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;"> 100</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">;</span></span></code></pre></div><p>这里，我们创建了一个名称为 <code>my_sequence</code> 序列生成器，它的起始值是 100。</p><p>然后，让我们使用 PostgreSQL <code>nextval()</code> 函数将序列 <code>my_sequence</code> 前进一位并返回最新的值：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> nextval(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">my_sequence</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> nextval</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">---------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">     100</span></span></code></pre></div><p>由于 <code>my_sequence</code> 的起始值是 100， 因此第一次执行 <code>nextval()</code> 函数，它返回了 100。</p><p>让我们再执行一次：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#F76D47;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;"> nextval(</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#91B859;--shiki-dark:#C3E88D;">my_sequence</span><span style="--shiki-light:#39ADB5;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#90A4AE;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes material-theme-lighter material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;"> nextval</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">---------</span></span>
<span class="line"><span style="--shiki-light:#E2931D;--shiki-dark:#FFCB6B;">     101</span></span></code></pre></div><p>这里，由于我们在创建序列 <code>my_sequence</code> 时没有设置增加大小，因此 <code>my_sequence</code> 的增量大小为 1。所以这次执行 <code>nextval()</code> 函数后，序列 <code>my_sequence</code> 的最新值从 100 变成了 101。</p>`,21)])])}const g=e(l,[["render",n]]);export{k as __pageData,g as default};
